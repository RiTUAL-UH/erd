




 There are a lot of skills and experiences that you can parse and structure well. It partly depends on whether you have effectively identified what types of jobs in the corporate world you think you are qualified for. 

So I think the bigger question is identifying exactly what you are well suited for within the corporate landscape, and then tailoring your resume / recruitment for that switch.

You can check out a site like tapwage.com to see what types of jobs there are at both large corporations or startups that might translate to your specific interests and skills. After that you really want to tailor your resume as closely to the job postings as possible, especially given the use of resume screening software / ATS.

If you have a very non-traditional background, you could perhaps specifically look at startups that are more open to that background (also are unlikely to use ATS / resume screening software so gives you more of a chance to tell your story). 

Targeting categories of jobs and companies is key to a successful transition in your case. The way you portray your specific experiences falls out of that.   




 1. Try and give them real projects with real responsibilities instead of just training / demo projects or shadowing full time employees, or rotating through a lot of groups. Ideally - projects are weekly, with end of week check-ins, and a chance to discuss work at Monday morning meetings. This is critical to make them feel a part of the time and get a sense of what the job is actually like full-time

2. If possible, have them seated in a large bull-pen or conference room together. The camaraderie is important and they end up teaching each other a ton and getting up to speed much faster than if seated separately across the office.

3. Goes without saying that mid-internship reviews are important but also important to be very candid during these sessions so they get a real measure of performance. Ideally do this at the 40% mark (since the last week or so of internships aren't really very active)

4. Again, probably obvious but activities outside the office help a lot - whether its a bowling event or volunteering. But it's only effective if you get full-time employees there across levels, so get that buy-in early.

5. I have found formal "mentor" programs very ineffective, and tried them in a  range of formats (junior mentors, senior mentors, peer mentors). Interns tend to find their own mentors and as long as they are on projects with real responsibility, they do ok. 

6. Meals are important and often that's a way to integrate them into the firm and spur conversations. If your office doesn't typically eat together in the office, may require planning to either create opportunities for them to do meals together with other employees (less formal than typical intern brown bag lunches though). 
 




 Both are determined, super smart and capable. My guess is Arya because she has actually killed before, and especially with the training she received at the temple of the many faced god.  









 "It's a UNIX system! I know this!"

https://www.youtube.com/watch?v=dFUlAQZB9Ng
 














 You won't be able to share your code from the current job but you will be able to talk to your skills and experiences, and a large enterprise app will probably much more valuable in an interview process than side projects (although you should always pursue side projects if you can, to keep sharp).

While on this large project, don't make the rookie mistake of sticking in a corner and not paying attention to how things get put together. Pay attention to what different teams are doing, how they work together, how unit and regression testing is conducted, how version control and builds are managed, how user provisioning is managed, how programming teams interface with database administration and infrastructure teams. Volunteer, take an interest, demonstrate initiative. That will really help you understand the guts of a large enterprise deployment and help you shine in a future interview. Taking that initiative will help you much more in future interviews and job applications than using a few hours a week to develop test applications. 

Moreover, if you just started work in May 2015, give it some time before you start worrying about your next job. Ideally give it a year or two and get yourself settled. Applying too soon to a new job could easily hurt your chances as you will be seen as not being a team player or not having a strong skill set (there will be concerns that you didn't cut it in your current job). 

Good luck.  









 It's hard to pick just 5.  




 Damn - I wish I had Beatles, Dre and Queen on my list too.  




 I would want that list to be as diverse as possible so I capture a wide range of musical choices. And each of them would need to have a really big discography to make it worth it. So my list would be:

1. Oasis (for rock)
2. Joe Purdy (for folk) [So torn on whether him or Paul Simon or Dylan]
3. Daft Punk (for dance)
4. Yo Yo Ma (for classical)
5. Michael Jackson (for pop)

This reminds me of the BBC radio show / podcast called "Desert Island Discs" which I love. It makes celebrities / writers choose 8 tracks that they would take with them to a desert island. Their choices often reveal so much more about them than a plain interview would. 
 









 Jay Leno. Seriously - who really likes one liners any more?  




 me too! I think he is very poignant and makes me think but just isn't funny to me. I much prefer Carlin, Chappelle or Chris Rock when it comes to interspersing social commentary and comedy.  




 Put the python related projects on your resume. Put them on github and then you can link to them. At least it's a talking point that demonstrates your initiative when it comes to computer science. Way too many computer science graduates go through school without doing anything outside of their core curriculum requirements.

In terms of open source, you need to build your way up. I am not sure what types of projects you have done using the Reddit API but perhaps you can find other related projects on github and try contributing to those repositories.  Projects where you get to work with other developers, and someone else codebase can be especially rewarding.

I would strongly advise you not to approach all these projects with the mindset of "what would look good on my resume". Follow your curiosity and find projects that interest you, whether its an app to solve a problem you have had, or helping with a small patch to a piece of software you use, or if you are just looking to see how larger projects work in the real world. Following your interests will take you to surprising places, give you real depth and that will show in your interviews. Padding your resume with projects just for the sake of your resume might work in the near term but it won't make you a bette programmer and worse, it might get you to stop enjoying programming.
  




 This reminds me of one of my favorite songs from Flight of the Conchord  - hiphopopotamus vs. rhymenoceros, where Brett says:

"Yes, sometimes my lyrics are sexist
But you lovely bitches and hoes should know I'm trying to correct this"

I love that show. 


Full video: https://www.youtube.com/watch?v=FArZxLj6DLk 




 Little Sebastian! 














 Bieber is pretty polarizing but has a huge community.  




 haha! yeah, second hand smoke stunts growth though.  









 Sidewalks aren't large enough and second hand smoke is awful. Find a secluded spot, and for goodness sake, don't smoke near a bus stop or some place where people have to wait and can't avoid the smoke.  









 I was in a cab the other day and the driver looked stressed as all hell. Told me that he levered up to buy the medallion at $1 million thinking it was the safest investment he could make, and immediately after, the price fell to $500k. He needed to declare personal bankruptcy. It was heartbreaking to hear.  




 Just suggest a call and find out what types of roles they have on offer. Might be spam, might be useful. Worth 10 minutes over the phone but would avoid an in-person meeting right away.  



















 so is "Let's just agree to disagree" 














