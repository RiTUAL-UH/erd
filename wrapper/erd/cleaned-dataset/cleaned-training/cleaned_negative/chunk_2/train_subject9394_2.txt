














 Hm, from the votes it seems that nobody here is interested in this comfortable helper. Ok then, thy will be done: Post text removed. 




 **FileRenameEditor**

A text editor for directory content.

Screenshot album with infos: **http://imgur.com/a/0syhO**

Binary download (Java 8): **[FileRenameEditor v[2, 2014-12-06]](https://bitbucket.org/train_subject9394/filerenameeditor/downloads/FileRenameEditor%202014-12-02%20v%5B2,%202014-12-06%5D.jar)**

Source: **[FileRenameEditor on BitBucket](https://bitbucket.org/train_subject9394/filerenameeditor/)**

* Edit the content of a directory like text in a text editor.

* You can type in several lines at once.

* block select

* block copy paste

* can trim clipboard content (optionally even trims away the file extension)

* commit selected lines or all lines

Since I have this thing, there have been a few situations where I realized: "Wait, I could solve this with FileRenameEditor." I really think that people are missing out by not knowing that such a tool exists. It's a need that arises, but your brain does not go \*click\* because it doesn't know about this. And as simple and useful as the concept is - I've never seen it anywhere or thought of it until recently.

If you think "WTF would I ever need that for?", take a look at the situation that inspired the idea:

http://np.reddit.com/r/learnprogramming/comments/2dfdsy/15_free_ebooks_on_machine_learning/cjozl6x

----

^^I'm ^^putting ^^the ^^small ^^game ^^I ^^recently ^^made ^^in ^^here, ^^too. ^^That's ^^simpler ^^for ^^me.

----

And here's a nice Battleships variant as a bonus: **Sink Twice**

Screenshots (not up to date): **[title](http://i.imgur.com/pPtt3QX.png)**, **[game](http://i.imgur.com/YNxW7gA.png)**

Binary download (Java 8): **[Sink Twice v[4xx, 2014-11-23]](https://bitbucket.org/train_subject9394/sink-twice/downloads/Sink%20Twice%202014-11-11%20v%5B4xx%202014-11-23%5D.jar)**

Source: **[Sink Twice on BitBucket](https://bitbucket.org/train_subject9394/sink-twice)**

Its creation was triggered by this post by Reddit user desrtfx:

**[Write a game of Battleships (aka Sea Battle) - to revive the subreddit](http://np.reddit.com/r/ProgrammingPrompts/comments/2l9c9r/write_a_game_of_battleships_aka_sea_battle_to/)**
 




 http://np.reddit.com/r/WritingPrompts/

Just now was the first time I heard about this subreddit. It prompts people to write stories with certain elements. Since people *here* are probably looking for ideas, I thought it would be a good idea to mention *that* subreddit. 




 **FileRenameEditor**

A text editor for directory content.

Screenshot album with infos: **http://imgur.com/a/0syhO**

Binary download (Java 8): **[FileRenameEditor v[2, 2014-12-06]](https://bitbucket.org/train_subject9394/filerenameeditor/downloads/FileRenameEditor%202014-12-02%20v%5B2,%202014-12-06%5D.jar)**

Source: **[FileRenameEditor on BitBucket](https://bitbucket.org/train_subject9394/filerenameeditor/)**

* Edit the content of a directory like text in a text editor.

* You can type in several lines at once.

* block select

* block copy paste

* can trim clipboard content (optionally even trims away the file extension)

* commit selected lines or all lines

Since I have this thing, there have been a few situations where I realized: "Wait, I could solve this with FileRenameEditor." I really think that people are missing out by not knowing that such a tool exists. It's a need that arises, but your brain does not go \*click\* because it doesn't know about this. And as simple and useful as the concept is - I've never seen it anywhere or thought of it until recently.

If you think "WTF would I ever need that for?", take a look at the situation that inspired the idea:

http://np.reddit.com/r/learnprogramming/comments/2dfdsy/15_free_ebooks_on_machine_learning/cjozl6x

Or just look at [this](https://github.com/ChapmanCPSC370/ClimbReady) GitHub repo Reddit user meza112 [posted](http://www.reddit.com/r/opensource/comments/2peyej/open_source_climbready/) here 12 hours ago. The file/directory names have a table-like structure, but there is no tool to edit it as such comfortably. I mean, there *was*.

----

^^I'm ^^putting ^^the ^^small ^^game ^^I ^^recently ^^made ^^in ^^here, ^^too. ^^That's ^^simpler ^^for ^^me.

----

**Sink Twice**

A Battleships implementation.

Screenshots (not up to date): **[title](http://i.imgur.com/pPtt3QX.png)**, **[game](http://i.imgur.com/YNxW7gA.png)**

Binary download (Java 8): **[Sink Twice v[4xx, 2014-11-23]](https://bitbucket.org/train_subject9394/sink-twice/downloads/Sink%20Twice%202014-11-11%20v%5B4xx%202014-11-23%5D.jar)**

Source: **[Sink Twice on BitBucket](https://bitbucket.org/train_subject9394/sink-twice)**

Its creation was triggered by this post by Reddit user desrtfx:

**[Write a game of Battleships (aka Sea Battle) - to revive the subreddit](http://np.reddit.com/r/ProgrammingPrompts/comments/2l9c9r/write_a_game_of_battleships_aka_sea_battle_to/)**
 




 **FileRenameEditor**

A text editor for directory content.

Screenshot album with infos: **http://imgur.com/a/0syhO**

Binary download (Java 8): **[FileRenameEditor v[2, 2014-12-06]](https://bitbucket.org/train_subject9394/filerenameeditor/downloads/FileRenameEditor%202014-12-02%20v%5B2,%202014-12-06%5D.jar)**

Source: **[FileRenameEditor on BitBucket](https://bitbucket.org/train_subject9394/filerenameeditor/)**

* Edit the content of a directory like text in a text editor.

* You can type in several lines at once.

* block select

* block copy paste

* can trim clipboard content (optionally even trims away the file extension)

* commit selected lines or all lines

Since I have this thing, there have been a few situations where I realized: "Wait, I could solve this with FileRenameEditor." I really think that people are missing out by not knowing that such a tool exists. It's a need that arises, but your brain does not go \*click\* because it doesn't know about this. And as simple and useful as the concept is - I've never seen it anywhere or thought of it until recently.

If you think "WTF would I ever need that for?", take a look at the situation that inspired the idea:

http://np.reddit.com/r/learnprogramming/comments/2dfdsy/15_free_ebooks_on_machine_learning/cjozl6x

----

^^I'm ^^putting ^^the ^^small ^^game ^^I ^^recently ^^made ^^in ^^here, ^^too. ^^That's ^^simpler ^^for ^^me.

----

**Sink Twice**

A Battleships implementation.

Screenshots (not up to date): **[title](http://i.imgur.com/pPtt3QX.png)**, **[game](http://i.imgur.com/YNxW7gA.png)**

Binary download (Java 8): **[Sink Twice v[4xx, 2014-11-23]](https://bitbucket.org/train_subject9394/sink-twice/downloads/Sink%20Twice%202014-11-11%20v%5B4xx%202014-11-23%5D.jar)**

Source: **[Sink Twice on BitBucket](https://bitbucket.org/train_subject9394/sink-twice)**

Its creation was triggered by this post by Reddit user desrtfx:

**[Write a game of Battleships (aka Sea Battle) - to revive the subreddit](http://np.reddit.com/r/ProgrammingPrompts/comments/2l9c9r/write_a_game_of_battleships_aka_sea_battle_to/)**
 




 I already Googled for this and only found r/shamelessplug and r/UseMySoftware, which I intentionally don't link because they both suck donkey-balls. Not only did the spam filter of both swallow my text posts (And I had my account checked by a Reddit *admin* - it's not me!), their moderators did not react to my messages in over a week.

So: Any tips for where I could post such a thing? Thanks in advance.

Since that question will probably come up: The program is a text editor for editing directory contents. (Multiline-edit, block select, block copy/paste, move from line to line and edit stuff, then finally commit selected (or all) lines or don't.) 




 The following quite short code displays [this](http://cache.fxexperience.com/wp-content/uploads/2013/02/Shapes3D.png). Resizing the window effectively moves the camera, so try that.

All taken from here: http://fxexperience.com/2013/02/javafx-3d-early-access-available/

	import javafx.application.Application;
	import javafx.scene.*;
	import javafx.scene.paint.Color;
	import javafx.scene.paint.PhongMaterial;
	import javafx.scene.shape.*;
	import javafx.stage.Stage;
	 
	public class Shapes3DViewer extends Application {
		@Override public void start(Stage stage) {
			PhongMaterial material = new PhongMaterial();
			material.setDiffuseColor(Color.LIGHTGRAY);
			material.setSpecularColor(Color.rgb(30, 30, 30));
	 
			Shape3D[] meshView = new Shape3D[] {
				new Box(200, 200, 200),
				new Sphere(100),
				new Cylinder(100, 200),
			};
	 
			for (int i=0; i!=3; ++i) {
				meshView[i].setMaterial(material);
				meshView[i].setTranslateX((i + 1) * 220);
				meshView[i].setTranslateY(500);
				meshView[i].setTranslateZ(20);
				meshView[i].setDrawMode(DrawMode.FILL);
				meshView[i].setCullFace(CullFace.BACK);
			};
	 
			PointLight pointLight = new PointLight(Color.ANTIQUEWHITE);
			pointLight.setTranslateX(800);
			pointLight.setTranslateY(-100);
			pointLight.setTranslateZ(-1000);
	 
			Group root = new Group(meshView);
			root.getChildren().add(pointLight);
			 
			Scene scene = new Scene(root, 800, 800, true);
			scene.setFill(Color.rgb(10, 10, 40));
			scene.setCamera(new PerspectiveCamera(false));
			stage.setScene(scene);
			stage.show();
		}
	 
		public static void main(String[] args) {
			launch(args);
		}
	}


https://docs.oracle.com/javase/8/javafx/graphics-tutorial/javafx-3d-graphics.htm 




 **Sink Twice**

A Battleships implementation.

Screenshots (not up to date): **[title](http://i.imgur.com/pPtt3QX.png)**, **[game](http://i.imgur.com/YNxW7gA.png)**

Binary download (Java 8): **[Sink Twice v[4xx, 2014-11-23]](https://bitbucket.org/train_subject9394/sink-twice/downloads/Sink%20Twice%202014-11-11%20v%5B4xx%202014-11-23%5D.jar)**

Source: **[Sink Twice on BitBucket](https://bitbucket.org/train_subject9394/sink-twice)**

Its creation was triggered by this post by Reddit user desrtfx:

**[Write a game of Battleships (aka Sea Battle) - to revive the subreddit](http://np.reddit.com/r/ProgrammingPrompts/comments/2l9c9r/write_a_game_of_battleships_aka_sea_battle_to/)**

----

**FileRenameEditor**

A text editor for directory content.

Screenshot album with infos: **http://imgur.com/a/0syhO**

Binary download (Java 8): **[FileRenameEditor v[2, 2014-12-06]](https://bitbucket.org/train_subject9394/filerenameeditor/downloads/FileRenameEditor%202014-12-02%20v%5B2,%202014-12-06%5D.jar)**

Source: **[FileRenameEditor on BitBucket](https://bitbucket.org/train_subject9394/filerenameeditor/)**

* Edit the content of a directory like text in a text editor.

* You can type in several lines at once.

* block select

* block copy paste

* can trim clipboard content (optionally even trims away the file extension)

* commit selected lines or all lines

Since I have this thing, there have been a few situations where I realized: "Wait, I could solve this with FileRenameEditor." I really think that people are missing out by not knowing that such a tool exists. It's a need that arises, but your brain does not go \*click\* because it doesn't know about this. And as simple and useful as the concept is - I've never seen it anywhere or thought of it until recently.

If you think "WTF would I ever need that for?", take a look at the situation that inspired the idea:

http://np.reddit.com/r/learnprogramming/comments/2dfdsy/15_free_ebooks_on_machine_learning/cjozl6x 




 It's idiotic that you get an autoresponse from a bot to tell you that your comment has been removed, or that you're lucky to check on your post yourself because it has been removed without a message.

Why does the system not just automatically fix those links instead of causing this *insane* amount of usability disturbance? This needs to be SOLVED, people. 




 ^^I'm ^^putting ^^the ^^small ^^game ^^I ^^recently ^^made ^^in ^^here, ^^too. ^^That's ^^simpler ^^for ^^me.

----

**FileRenameEditor**

Binary download (Java 8): **[FileRenameEditor v[1, 2014-12-05]](https://bitbucket.org/train_subject9394/filerenameeditor/downloads/FileRenameEditor%202014-12-02%20v%5B1,%202014-12-05%5D.jar)**

Source: **[FileRenameEditor on BitBucket](https://bitbucket.org/train_subject9394/filerenameeditor/)**

Allows to edit the names of files/directories in a directory almost like in a text editor. Has block select, copy paste, multiline edit (as if many cursors). Commit individual lines or all of them.

If you think "WTF would I ever need that for?", take a look at the situation that inspired the idea:

http://np.reddit.com/r/learnprogramming/comments/2dfdsy/15_free_ebooks_on_machine_learning/cjozl6x

Screenshot album with infos: **http://imgur.com/a/0syhO**

----

**Sink Twice**

Binary download (Java 8): **[Sink Twice v[4x, 2014-11-23]](https://bitbucket.org/train_subject9394/sink-twice/downloads/Sink%20Twice%202014-11-11%20v%5B4x%202014-11-23%5D.jar)**

Source: **[Sink Twice on BitBucket](https://bitbucket.org/train_subject9394/sink-twice)**

Screenshots (not up to date): **[title](http://i.imgur.com/pPtt3QX.png)**, **[game](http://i.imgur.com/YNxW7gA.png)**

Its creation was triggered by this post by Reddit user desrtfx:

**[Write a game of Battleships (aka Sea Battle) - to revive the subreddit](http://np.reddit.com/r/ProgrammingPrompts/comments/2l9c9r/write_a_game_of_battleships_aka_sea_battle_to/)**
 




 **Sink Twice**

Binary download (Java 8): **[Sink Twice v[4x, 2014-11-23]](https://bitbucket.org/train_subject9394/sink-twice/downloads/Sink%20Twice%202014-11-11%20v%5B4x%202014-11-23%5D.jar)**

Source: **[Sink Twice on BitBucket](https://bitbucket.org/train_subject9394/sink-twice)**

Screenshots (not up to date): **[title](http://i.imgur.com/pPtt3QX.png)**, **[game](http://i.imgur.com/YNxW7gA.png)**

Its creation was triggered by this post by Reddit user desrtfx:

**[Write a game of Battleships (aka Sea Battle) - to revive the subreddit](http://np.reddit.com/r/ProgrammingPrompts/comments/2l9c9r/write_a_game_of_battleships_aka_sea_battle_to/)**

----

**FileRenameEditor**

Binary download (Java 8): **[FileRenameEditor v[1, 2014-12-05]](https://bitbucket.org/train_subject9394/filerenameeditor/downloads/FileRenameEditor%202014-12-02%20v%5B1,%202014-12-05%5D.jar)**

Source: **[FileRenameEditor on BitBucket](https://bitbucket.org/train_subject9394/filerenameeditor/)**

Allows to edit the names of files/directories in a directory almost like in a text editor. Has block select, copy paste, multiline edit (as if many cursors). Commit individual lines or all of them.

If you think "WTF would I ever need that for?", take a look at the situation that inspired the idea:

http://np.reddit.com/r/learnprogramming/comments/2dfdsy/15_free_ebooks_on_machine_learning/cjozl6x

Screenshot album with infos: **http://imgur.com/a/0syhO** 




 Doesn't happen often, but it happens. Here's a nice tip to streamline the process *and* to reduce bug-probability (break, right).

	switch (keyCode) {
	case 38: // Up
		break;
	case 40: // Down
		break;
	case 37: // Left
		break;
	case 39: // Right
		break;
	default:
		System.out.println("case " + e.getKeyCode() + ": // " + e.paramString() + "\nbreak;");
	}

So, whenever you hit a key that's not yet digested, you'll get output like this in the console:

    case 123: // KEY_PRESSED,keyCode=123,keyText=F12,keyChar=Undefined keyChar,keyLocation=KEY_LOCATION_STANDARD,rawCode=123,primaryLevelUnicode=0,scancode=88,extendedKeyCode=0x7b
    break;
    case 122: // KEY_PRESSED,keyCode=122,keyText=F11,keyChar=Undefined keyChar,keyLocation=KEY_LOCATION_STANDARD,rawCode=122,primaryLevelUnicode=0,scancode=87,extendedKeyCode=0x7a
    break;

That's the simple way, if you don't want to carry around too much code baggage / want to do it from memory. If you want to get sophisticated, call this method instead:

    final public static void keyCodeSwitchHelper(final KeyEvent e) {

        final String paramString = e.paramString();
        final String startText = "keyText=";
        final int startTextPos = paramString.indexOf(startText);
        final int endPos = paramString.indexOf(",", startTextPos + 1);
        final String keyText;
        if (startTextPos  0) {
            keyText = paramString;
        } else {
            if (endPos  0) {
                keyText = paramString.substring(startTextPos + startText.length());
            } else {
                keyText = paramString.substring(startTextPos + startText.length(), endPos);
            }
        }
        System.out.println("case " + e.getKeyCode() + ": // " + keyText + "\nbreak;");
    }

Example output:

	case 112: // F1
	break;
	case 113: // F2
	break;
	case 69: // E
	break;
	case 10: // Enter
	break;
	case 18: // Alt
	break;
	case 115: // F4
	break;

You could also use this concept to get the scancode, a keyboard language layout independent key value, but this will probably only work on Windows, and if so, then you should better use this method I posted on StackOverflow which uses reflection:

http://stackoverflow.com/a/26688875/3500521

...

(Just added *this* post as a StackOverflow [answer](http://stackoverflow.com/questions/21585729/keycodes-processing/27252590#27252590).) 




 **SOLVED!** The problem was simply path depth. :P After moving the executable to a shorter-path location, it worked.

----

This is a weird problem that I couldn't solve even after 5 hours of experimenting and Googling. I just made a StackOverflow post about this. If you have the answer to this, you're awesome, because it's a super obscure problem.

http://stackoverflow.com/questions/27227647/image-size-returns-1-in-jar-but-proper-size-in-ide-image-loaded-via-toolkit

Comment in the post that lead to all this, also explaining the problem with different words:

http://www.reddit.com/r/learnprogramming/comments/2mxrv5/java_trying_to_export_a_project_of_mine_i_export/cmhtkoz 




 ^^Repost ^^due ^^to ^^hyperactive ^^bot.

[This](http://np.reddit.com/r/ProgrammingPrompts/comments/2l9c9r/write_a_game_of_battleships_aka_sea_battle_to/cm54rbq) post in /r/ProgrammingPrompts motivated me to make a Battleships implementation in **Java 8**. Since it has become kinda polished, I think it's suitable to be presented among the simpler Indie games.

[BitBucket repository](https://bitbucket.org/train_subject9394/sink-twice) (also has binary download, less than 200KB, but the game has sound and music, it's just realtime-synthesized), direct binary download [link](https://bitbucket.org/train_subject9394/sink-twice/downloads/Sink%20Twice%202014-11-11%20v%5B4x%202014-11-23%5D.jar)

screenshots (not completely up to date): [title screen](http://i.imgur.com/pPtt3QX.png), [game screen](http://i.imgur.com/YNxW7gA.png) 




 http://www.reddit.com/r/truegaming/comments/2nmz7c/playing_minecraft_made_me_realize_something_about/

The post is by /u/Babba2theLabba

About 45 lines of text. The last line, which is a paragraph by itself, says:

 Essentially, I just really think that a game based on navigation and travel would be really cool. 




 Also [posted](http://www.reddit.com/r/math/comments/2nd3xz/given_the_importance_of_the_sine_function_why_did/) to r/math, but they don't take kindly, it seems, so I try it here.

----

screenshot: http://i.imgur.com/zgNcyfA.png

----

    import javax.swing.*;
    import java.awt.*;


    /**
     * USE ALT+F4 TO QUIT
     * p
     * So, what is this? A Java program that shows a borderless fullscreen window in which a simple sine wave is drawn
     * using Math.sin().
     * p
     * But behold! A second sine wave is drawn precisely on top of it, and basically all that's needed for it is a loop of
     * "y+=v; v-=y;". Not only is that bafflingly simple (though I honestly have no idea about the true definition of the
     * sine function), it's also crazy that these two waves are perfectly on top of each other by using very similar values
     * and no Pi/Tau at all. It took me about ONE MINUTE to get the two waves aligned. I don't think that's random.
     */
    final public class UltrasinusTest {

        public static void main(final String[] args) {
            SwingUtilities.invokeLater(UltrasinusTest::new);
        }

        final public JPanel contentPane;
        final public JFrame screen;

        private UltrasinusTest() {

            contentPane = new MyContentPane();
            screen = new JFrame();
            screen.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
            screen.setUndecorated(true);
            screen.setExtendedState(Frame.MAXIMIZED_BOTH);
            screen.setContentPane(contentPane);

            screen.setVisible(true);
        }

        final private static class MyContentPane extends JPanel {

            @Override
            final public void paintComponent(final Graphics graphics) {

                final Graphics2D g = (Graphics2D) graphics;
                final int w = getWidth();
                final int h = getHeight();
                g.setColor(new Color(0x222222));
                g.fillRect(0, 0, w, h);
                g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                g.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);

				
                // DRAW CENTER LINE
                g.setColor(new Color(0x444444));
                g.drawLine(0, h / 2, w, h / 2);

				
                final int amplitude = 300;
                int y;

				
                // DRAW ACTUAL SINUS
                g.setColor(new Color(0xff0000));
                for (int i = 0; i  w; i++) {
                    y = h / 2;
                    y -= (int) (Math.sin(i * 0.01d) * amplitude);
                    g.drawLine(i, y - 2, i, y + 2);
                }

				
                // DRAW "ULTRASINUS" (based on the sequence 1 1 0 -1 -1 0 which is a result of a loop of "y+=v;v-=y;" when y=1)
                g.setColor(new Color(0xffff00));
                double ultraSinus_value = 0;
                double ultraSinus_vector = 100;
                for (int i = 0; i  w; i++) {
                    y = h / 2;
                    y -= (int) (ultraSinus_value * amplitude);
                    g.drawLine(i, y, i, y);

                    ultraSinus_value += ultraSinus_vector * 0.0001;
                    ultraSinus_vector -= ultraSinus_value;
                }

            }
        }
    }
 




 screenshot: http://i.imgur.com/zgNcyfA.png

    import javax.swing.*;
    import java.awt.*;


    /**
     * USE ALT+F4 TO QUIT
     * p
     * So, what is this? A Java program that shows a borderless fullscreen window in which a simple sine wave is drawn
     * using Math.sin().
     * p
     * But behold! A second sine wave is drawn precisely on top of it, and basically all that's needed for it is a loop of
     * "y+=v; v-=y;". Not only is that bafflingly simple (though I honestly have no idea about the true definition of the
     * sine function), it's also crazy that these two waves are perfectly on top of each other by using very similar values
     * and no Pi/Tau at all. It took me about ONE MINUTE to get the two waves aligned. I don't think that's random.
     */
    final public class UltrasinusTest {

        public static void main(final String[] args) {
            SwingUtilities.invokeLater(UltrasinusTest::new);
        }

        final public JPanel contentPane;
        final public JFrame screen;

        private UltrasinusTest() {

            contentPane = new MyContentPane();
            screen = new JFrame();
            screen.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
            screen.setUndecorated(true);
            screen.setExtendedState(Frame.MAXIMIZED_BOTH);
            screen.setContentPane(contentPane);

            screen.setVisible(true);
        }

        final private static class MyContentPane extends JPanel {

            @Override
            final public void paintComponent(final Graphics graphics) {

                final Graphics2D g = (Graphics2D) graphics;
                final int w = getWidth();
                final int h = getHeight();
                g.setColor(new Color(0x222222));
                g.fillRect(0, 0, w, h);
                g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                g.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);

				
                // DRAW CENTER LINE
                g.setColor(new Color(0x444444));
                g.drawLine(0, h / 2, w, h / 2);

				
                final int amplitude = 300;
                int y;

				
                // DRAW ACTUAL SINUS
                g.setColor(new Color(0xff0000));
                for (int i = 0; i  w; i++) {
                    y = h / 2;
                    y -= (int) (Math.sin(i * 0.01d) * amplitude);
                    g.drawLine(i, y - 2, i, y + 2);
                }

				
                // DRAW "ULTRASINUS" (based on the sequence 1 1 0 -1 -1 0 which is a result of a loop of "y+=v;v-=y;" when y=1)
                g.setColor(new Color(0xffff00));
                double ultraSinus_value = 0;
                double ultraSinus_vector = 100;
                for (int i = 0; i  w; i++) {
                    y = h / 2;
                    y -= (int) (ultraSinus_value * amplitude);
                    g.drawLine(i, y, i, y);

                    ultraSinus_value += ultraSinus_vector * 0.0001;
                    ultraSinus_vector -= ultraSinus_value;
                }

            }
        }
    }
 




 So, I create a new Scratch file: `Tools - New Scratch File ...`, selecting `Java` from the list that appears.

I can type code with the support that I also get in the editor, e.g. using Live Templates, which are context-sentitive, so they only work if you're in the respective code location (e.g. the shortcut for creating the main method does not work inside a method). This means that IntelliJ understands what's going on.

Yet the code is not syntax-highlighted. (I already did "invalidate caches and restart".) Only the keywords (class etc) and the String literals are highlighted like they should, the rest is just gray. Also:

    class Test {
        public static void main(String[] args) {
            System.out.println("How do I run this?");
        }
    }

I can't find a way to execute the code. If I use "Run..." or "Debug...", the Run Configurations dialog pops up saying that it can't find the class Test.

Eclipse, for years, has had a Scratch file feature where you could enter code that would actually be evaluated/executed. I expected IntelliJ's Scratch files to be able to do the same.

**What are these good for at all?** I can't find any documentation that goes into details, it only says how to create or remove them. 









 EDIT:

The optimal solution, way better than my implementation, is zifyoip's solution

    return v1 == null ? v2 == null : v1.equals(v2);

which is so short that it doesn't require a method at all.

----

EDIT: In light of someone possibly getting mislead by this, please consider the critical comments. However, I had a specific use case for this when I created it, and so far I can't see a different/better solution or how this solution would be improper for this:

http://www.reddit.com/r/java/comments/2mmsic/whats_are_the_differences_between_a_set_and_an/cm5uts3?context=3

(Used while determining the index of a key in an ordered Map.)

----

This generic utility method compares two elements using the .equals() method, even if one of the two elements is null. Call it like any other method, works with any pair of elements (though identical type is encouraged for logical reasons).

    final public static T1, T2 boolean equalsEvenIfNull(final T1 v1, final T2 v2) {

        return (v1 != null    v1.equals(v2)) || (v2 != null    v2.equals(v1)) || (v1 == null    v2 == null);
    }

It happens often that you want to check for equality, and then you think "Wait, one of the two can be null, I better change a.equals(b) to b.equals(a)." But what do you do if both can be null in some cases? This method solves that problem.

I thought it would be *help*ful.

...

Hm, I just realize that instead of making it generic, I could just use Object right away. So, why didn't I just edit the above? Because then you don't understand why I felt like making a post about this, given that it's so trivial. But now that I have spent so much effort, I also don't want to delete it.

    final public static boolean equalsEvenIfNull(final Object v1, final Object v2) {

        return (v1 != null    v1.equals(v2)) || (v2 != null    v2.equals(v1)) || (v1 == null    v2 == null);
    }
 




 I have been using IntelliJ for half a year now, and I can't remember *not* having had this problem sometimes - see screenshot:

http://i.imgur.com/sUYRUK9.png

Here's an example:

    final MapInteger, Double ret = new HashMap(); // Could also be ArrayList.

This should work, and it does. In the source, IntelliJ sometimes just shows this line as erroneous, but I can still compile/run. If I go to that line and press ENTER at its end, creating a new line / triggering a text change, the error usually goes away. It also goes away by itself quickly when I edit somewhere else.

It's just annoying, that's all.

Did anyone ever observe this? Have it like three times a week at least. 




 So, in addition to this

    if (idx = 0    idx  myList.size()) {

there could also be this

    if (0 = idx  myList.size()) {

which is a much more concise way to express: "This is an intended-value-range condition." Conciseness/clarity *is* a relevant source code and hence language design aspect, right?

(Just a little drive-by post to get this out.)
 




 German Heise article from yesterday:

[Mathematica rechnet falsch](http://www.heise.de/newsticker/meldung/Mathematica-rechnet-falsch-2435319.html)

PDF by the mathematicians who discovered and reported the error, from apparently tomorrow (November 2014):

[The Misfortunes of a Trio of Mathematicians Using Computer Algebra Systems. Can We Trust in Them?](http://www.ams.org/notices/201410/rnoti-p1249.pdf)
 




 **EDIT:** SourceTree wants you to register after a month or so, and when this didn't work for me (Wrong password!?), I simply switched to a different client that is free for non-commercial use: http://www.syntevo.com/smartgit/ It even has .class, workspace.xml and others ignored right out of the box. But you might need to use its Git shell to manually [prevent](http://stackoverflow.com/questions/1967370/git-replacing-lf-with-crlf) CRLF conversion. (I did, because I wanted to use LF all the way.)

----

**EDIT:** It *is* possible to create a BitBucket repository entirely with SourceTree, and to upload a project with files that so far had not been source controlled. But it's quite unnecessarily complicated.

http://www.reddit.com/r/learnprogramming/comments/2kd4uw/any_language_version_control_how_to_set_up/clkzr7f?context=5

----

This is not *the definitive* guide. I just fought with these things for six goddamn hours, writing a tutorial for our team in the process, thought I'd share.

This might well work the same with GitHub, too. We chose BitBucket because it has free *private* repositories, even for (small) teams. It supports Mercurial and Git.

----

When you go the BitBucket homepage while logged in, you'll see a big download link for SourceTree, which is not really wired to BitBucket, it just supports it well. It can not create a repository on BitBucket for you, so you have to do that on the site.

Btw., if you just created a BitBucket repository, the landing page will then offer a Clone in SourceTree button which will ultimately just show you an error message because there are no files in the repository yet. To get SourceTree up and running with your new repository (or with a "full" one), instead do this:

* Download, install, run http://www.sourcetreeapp.com/ (Win/Mac) 

* Click Clone/New, the prominent button at the left top. The quasi-window that opens has three tabs (Clone Repository, Add Working Copy, Create New Repository), Clone is the one we need and is already selected.

* Paste the URL of your BitBucket repository into the field Source Path / URL: at the top, e.g. "https://bitbucket.org/elpresidente/helloworld". My experiences today have not shown a difference regarding repository type (Mercurial or Git), except I think that the Staged files and Unstaged files sections are only one section with Mercurial.

* Create a folder for your IDE project on HD, e.g. helloworld, browse there, copy the whole address bar text, click into Destination Path:, the second field from the top, which will generate an autotext that you have to delete. (I fell for this one a few times.) Paste the clipboard into Destination Path:

* Leave the rest alone, click the Clone button at the bottom. If the BitBucket repository was brand new, then all that you have achieved is that SourceTree is now married to that repository. If there's already stuff online, it will now also be on your HD. (What do the cool kids call it these days, by the way? Could be a hard disk, could be a solid state disk, so what general term should be used?)

* Start IntelliJ IDEA. IN CASE ITS A NEW PROJECT: Create a new IntelliJ project by clicking New Project in IntelliJ. Java will be selected in the dialog, so click Next twice. No idea what the templates are good for, but as far as I know IntelliJ so far, they are good stuff. The dialog now shows two lines of text: The project name and its location. Replace the location text with your clipboard content. This also sets the project name field. You can change the project name field if you want, or you can rename the project later in the IDE. IN CASE ITS AN EXISTING PROJECT: Select Open Project. Paste your clipboard content into the file browsers address bar, the browser should then show the appropriate tree. Click OK.

* Assuming that it's a new IntelliJ project: Switch back to SourceTree. In the second column from the left, select Working Copy under File Status.

* There should be two sections: At the top is the empty Staged files section. At the bottom is the crowded Unstaged files section. You should mirror all files that are listed there (from our new IntelliJ project) with the source control system, *except the file workspace.xml*, so click on the ... which is really a button. In the menu, select Ignore file, select Ignore exact filename(s), select all repositories in the dropdown box (so youll never have to do this again), click OK. Btw, the menu entry Remove file actually deletes the file from HD (after asking you), just FYI.

* Check the cumulative box of the Unstaged files to turn them into Staged files.

* Now its time for the first commit. Click in the text field at the bottom or use the toolbar button Commit, enter a description (e.g. 1st). There are options in the dropdown box to the right, e.g. Create Pull Request which I think would notify the other guys, but I dont know. Click the Commit button at the right bottom. This committed the changes *to the local version of the repository*. In case you get an error message here: You might have to configure your identity first via the repository config toolbar button on the far right.

* To actually get your stuff online now, click the Push button in the toolbar. You probably have to activate the checkbox next to master in the window that appeared. Click OK, and thats it.

* If you change something in the code and save the file, SourceTree will show that there are changes. You'll have to do the checkbox thing again as described above, etc.

* BitBucket has a version history of the files, so you can compare the various versions. To actually return to an older version via SourceTree, do this: In the second column to the left, which shows File Status (Selected by default.), Branches, Tags, Remotes, click Branches and choose an entry (e.g. default). This will show the online history in SourceTree. Select any history entry you want, its only relevant for being able to choose a file in the list at the bottom. Right-click the file in question, select Log Selected. In the new window, right-click the file version you want to be current and select Reset to Commit. Confirm the Are you sure? dialog. Your local file should now have changed accordingly, which IntelliJ should immediately reflect in the editor, if its open. In SourceTree, the history list should have the new **bold** entry Uncommitted changes, so select Working Copy under File Status in the second column and continue with what I wrote earlier about uploading stuff, or keep working locally for the time being, until you think that stuff online should change.

 




 **"Applications" are closed. (We've got a few guys now.)**

----

I think this is not the right subreddit to ask this, but I don't know of a better one at the moment. I already [commented](http://www.reddit.com/r/gamedev/comments/2k6eej/its_the_rgamedev_daily_random_discussion_thread/clj67pi) in r/gamedev's random discussion thread. /r/gameDevClassifieds is hardly appropriate.

It's 9 AM on a Saturday in Germany, and I'm in the mood to do some team programming in Java. Nothing serious, there should be no obligations either way. Kind of like a forum chat experience - something you do just for fun and stop when you wanna do something else. Except of course with more energy and dedication because that's what programming requires. Could be game related, but could also just be library code, or an application.

Java is my day job, so I'm far from being a beginner (but wouldn't call myself a pro). I haven't published anything privately yet. I'm very active (on and off, though) in the Java subreddits and this one. I don't mind if the other person is not very proficient as long as the outcome is two people programming on one project, not one learning and the other tutoring or something. I'm active from 4 AM to 18 PM [Zulu Time](http://www.zulutime.net/) on weekends, or 16-18 PM during the week. 




 The **[screenshot](http://imgur.com/G6FXU4S)** shows the rotation center under the mouse pointer. The smaller circle shows the rotation angle: It's at about 180.

Obviously, the position of the rotation center affects the effective position of the object even though its internal coordinates stay the same. But the user must be able to drag the rotation center *without* the object moving in a logically correct but usability-wise completely insane way: The object must stand still.

For that, I would need to translate the left-top corner coordinate of the object (which is at the right bottom in the screenshot) as the rotation center is dragged.

Could you please give me a tip (that does not involve matrices because they are completely cryptic to me)? I already toyed around with multiplying the drag-delta with the sin/-cos of the angle\*Tau in various combinations, even multiplied the angle (A value from 0 to 1 for convenience.) with it in a way that the closer to 0 the angle is, the less this adjustment takes place. I can't find the right way.

EDIT:

Found a few values through experimenting. Still pondering, though.

    for angle 0 (0)
    x stays the same (so, x changes to x + rotXDelta - rotXDelta)
    y stays the same (so, y changes to y + rotYDelta - rotYDelta)

    for angle 0.25 (90)
    x changes to x + rotXDelta - rotYDelta
    y changes to y + rotYDelta + rotXDelta

    for angle 0.5 (180)
    x changes to x + rotXDelta * 2 (so, x changes to x + rotXDelta + rotXDelta)
    y changes to y + rotYDelta * 2 (so, y changes to y + rotYDelta + rotYDelta)

    for angle 0.75 (270)
    x changes to x + rotXDelta + rotYDelta
    y changes to y + rotYDelta - rotXDelta 

    (rotXDelta and rotYDelta are the relative movement of the rotation center.)

I think I see now ...

The trick is to achieve for 0, 0.25, 0.5, 0.75 the following:

    ... - rotXDelta
    ... - rotYDelta

    ... - rotYDelta
    ... + rotXDelta

    ... + rotXDelta
    ... + rotYDelta

    ... + rotYDelta
    ... - rotXDelta 

Or rather:

    ... + rotXDelta*-1 + rotYDelta*0
    ... + rotYDelta*-1 + rotXDelta*0

    ... + rotXDelta*0 + rotYDelta*-1
    ... + rotYDelta*0 + rotXDelta*1

    ... + rotXDelta*1 + rotYDelta*0
    ... + rotYDelta*1 + rotXDelta*0

    ... + rotXDelta*0 + rotYDelta*1
    ... + rotYDelta*0 + rotXDelta*-1

Sounds like a job for Mister (co)sinus.

----

Ok, found the working Java code. But I think posting this helped me find the solution.

    final double rotCos = -Math.cos(rotAngle * MathUtils.Tau);
    final double rotSin = Math.sin(rotAngle * MathUtils.Tau);
    x += rotXDelta + rotXDelta * rotCos + rotYDelta * -rotSin;
    y += rotYDelta + rotYDelta * rotCos + rotXDelta * rotSin;

The object now visually stays in the same place when I drag the rotation center, no matter what the rotation angle is.

Thanks for trying to help / reading. 




 Voice on the phone says: "Press 1 for tech support. Press 2 for ..." - Show this on the display right away! Use "modem"-sounds to transmit info.

This could be a life saver in urgent cases, and certainly improves usability *a lot* since you don't have to remember anything and are also under much less time pressure.

It seems like a no-brainer to implement this, now that phones usually have displays. A proper standard should be developed, so that even info like "2m 14s estimated waiting time left" could be shown *and count down* (so the phone would have to *understand* the info instead of just throwing text and standard-icons onto the screen).

Since the info to be transmitted is so little, this should be doable even in the face of voice-optimizied audio compression.

Had this idea a few years back. I don't care what happens to it, so take it or leave it. Just thought I'd put it out there.

This could become a billion dollar thing! 




 The more pairs you have, the easier the problem arises. For identical pairs, you don't want to wear an old sock with a new one. For others, you might have very similar patterns that you only later realize were different (when it's too late).

As a joke, but also with some use factor, I think it would be a good product idea to have socks with an identical [QR-code](http://en.wikipedia.org/wiki/QR_code) on both socks that contains a [UUID](http://en.wikipedia.org/wiki/Universally_unique_identifier) (Globally unique ID.) whose value the sock-user can compare. There could also be an app that explicitly allows to scan both and compares if they are identical. Might also have additional features like a personal database of socks that have no partner - it might eventually show up, identified by the UUID.

It's of course a problem to produce each pair with an individual code, but I bet that this isn't a hard problem any more today.

Had this idea this morning. I don't care what happens to it, so take it or leave it. Just thought I'd put it out there. 




 Observing over time that this subreddit does not deserve me, I retract my informative post text. Thy will be done, that's how I roll. Of course, people, being insane as they are, object to *that*, too. 




 **PREFACE**

The concepts in this text might be interesting especially to beginner gamedevs or people who [prefer to] work alone. They might have an enabling/motivating "I can do that!" experience because of the huge potential and ease of implementation. The language I work with (Java) is not important to the concepts, and very little of the text is about implementation, anyway.

If you aim to create Steam-level games, or (sadly) have some kind of subconscious clipper that makes you assume that only stuff that can sell in the PlayStation store is even worth thinking about, then save time and read no further. But if you have a text-adventure-ish mind-openness, you might find some great food for thought. Be warned, it's a lot of text (Sorry. But I'm writing this *for you*, I'd rather continue coming up with new shit, typing in my FreeMind document.), and you'll walk away *not knowing* what it really is if you haven't at least skimmed the whole thing.

I have been pondering concepts closely related to what the headline says for *months* in a row now, so I find the currently emerging concept all this seems to converge in worthy of sharing / discussing.

Key aspects that emerged as attractors during my ponderings of this year:

* Should be very easy to implement, so that as little as possible stands between my story-/game-idea musings and a working game.

* Should mainly build on the fantasy of the player, because I wouldn't be able to pull off (nor be willing to "waste" too much time on) adequate graphics. Those would also "bake" too much into place (e.g. the interface) - I am trying to stay flexible because I have been changing course *a lot*.

* Should allow complex object interactions with many different kinds of objects.

* Should allow spatial gameplay (e.g. to move around stealthily, to hide, to stay out of view), because I kept having a strong Deus Ex 1 and "escape from pursuers" vibe and like the idea of breaking into people's homes for loot.

I believe I have found a great answer to these demands:

----

**OBJECT SYSTEM**

All my recent prototypes converged into one underlying system that I have hence put into a library: A container based object system (CBOS). At its core, it's just an object class that has a container and an inventory list, which allows arbitrarily complex object trees: a ring in a box in a drawer in a desk in a room in a sector (e.g. "apartment" in a multi-apartment house) on a floor in a house on a plot of land (e.g. police hq having main building and generator building) etc.. Building such a tree is easy: You create the desk instance, the room instance, then call "setContainer(room)" on the desk. (If there's an object that's contained by the desk, it will, too, now be (indirectly) in the room. Perfectly straightforward.) Btw., I used soft references (Object IDs, a simple long counter.) so that during loading a savegame non-existing objects are not a problem. For the same reason, I put various HashMaps into the object so that I don't have to save/load individual variables but can just bulk it all. Once you have this, you can do an awesome amount of things, so I heartily recommend this concept.

**WHAT CAN EASILY BE DONE WITH IT**

I made console-based prototypes with this where you could select from a list of local objects (e.g. bathroom door), which lets the door add its interactions to the mainloop's list of default actions. You could open and close doors, or water valves, to any degree you wanted, the outlet would generate water substance objects that are collated to one substance object (if their respective container was the same, I mean) by a special call in the main loop. The smell of dampness would spread through the apartment, relative to the openness of doors. (In a different prototype,) The player was a complex object tree of body parts. To eat something, you would put an object into your mouth - think about this. "Duh." right? Except all games would have an "eat" verb that is *fake*, a make-believe facade for the players that they might not recognize as such, just as a reader might not recognize bad typography, but the impact on the brain / experience happens anyway, so maybe it's a good idea to try to not just make things *seem* real but to kinda *make them real*.

Here's one of these CBOS-prototypes:

download (0.29 MB, needs Java 8, console game, so start it with `java.exe -jar cbosdemo.jar`): http://s000.tinyupload.com/index.php?file_id=00965712612844994833

**screenshot: http://i.imgur.com/Oc219oh.png**

----

**THE CONCEPT THIS POST IS ABOUT**

----

**SPATIALITY**

For spatiality, I had pondered all angles (abstract and tangible), but I ultimately settled for tiles. With a few radical twists, though:

1) I don't waste time on creating tile graphics or a tile graphics engine (e.g. defining which image rectangle is what object), instead I use *text-based tiles*. The screen background is white. Nothing-tiles (e.g. outside building on a floor above ground) are black, wall-tiles are dark gray, door tiles dark desaturated brown. The colors are strictly symbolic. Object tiles that you can enter (bed, toilet, shower stall) are bright gray and simply have a text written in them, saying what the tiles are (e.g. "bed"). Same for tiles you can't enter (office desk, washbasin), except the gray is darker. I tried to only have texts, but that was just confusing. This, however, is a golden middleground. You can even add details like "damaged" in a second line, even a bargraph that expresses the amount of damage - destructible walls or at least doors. The player ("YOU") would have the same bright gray as "enterable" object tiles, for the association. Or the player could have a couple of horizontal bar graphs in that color, expressing the current state of their most important stats.

**Photoshop mockups: http://imgur.com/a/0V1pm**

2) The tiles do not represent a precise size: They are only for the player's coarse spatial association. A bed is as big as a toilet or the player. Big bonus: You don't have to ponder the problem of multi-tile objects. I figure they measure from 0.5 to 3 meters, which sounds worse than it is. I invested a lot of thought in all this and wrote many kilobytes of notes, arriving at a system that would work as a whole. **Just look at the images and remember that you set out to play a *text adventure*.** But at the same time, you can use this spatiality to even implement the throwing or shooting of objects. This can even happen in the form of realtime action instead of turn-based gameplay.

Realize that you are looking at squiggly lines, fly droppings, circles - also known as "text". "You get used to it, though. Your brain does the translating. I don't even see the code. All I see is blonde, brunette, redhead." *The same would happen for the text tile system!* Except that the meanings that it can transport are very hard to transport via text, and/or it would take a lot of text / effort on the side of the player.

So, difference to classical text adventure: You don't say "go north" to visit the next location. Nor are locations here just one place were there's a desk, a bed, and two doors. If you are in a small bathroom, you see a small bathroom; if you're in a hangar, it will take you time to get from one end to the next, so the game could even feature view distance, especially for potential foes (guards etc.), and you can also have the traditional rotating camera you have to avoid. But how is this still a text adventure? Well, read on.

**INTERFACE / OBJECT INTERACTION**

The example uses 128x128 pixels per tile. The intention is to have the tile "map" occupy the whole screen. However! There should be a *very slight* movie letterbox effect: A thin black bar at the top and bottom, maybe separated with a thin line from the step-scrolling map. At the top, you have the "breadcrumbs" of the object tree, and the game clock. At the bottom, you have the list of current realtime interaction controls. More about that *key stuff* later.

You press the right mouse button to pause the game (if it's the realtime variant) and to get a mouse pointer, which is otherwise hidden, cause it's useless while you WASD around in the world. When you hover over a map tile with the mouse pointer, a description (If any.) is shown at the opposite side of the screen, e.g. "The office desk is old and sturdy, made from massive oak wood.", but what's also shown is a list of contained objects, e.g. "desktop", "left drawer", "right drawer". These are just CBOS-objects whose container is the desk. They might have "joint" information like "mounted" (drawer) or "isPartOf" (desktop), not shown to the player but relevant to potential interactions you might come up with later. The object list and description change/vanish depending on where you hover. When you click the right mouse button again, you're back in the (realtime) game. But if you click the left mouse button, the hover-effect is frozen, so you can now move the mouse to the object list (List and description would now be at a fixed position, e.g. always the left top of the screen). When you hover over objects, a second description text and object list is shown next to the first one, showing e.g. the "desktop" description and the objects placed there. Again you'd have to left-click to freeze the hovering. The first description/text would vanish, the second would be moved into its place. So, you could repeat this concept arbitrarily deep.

The actual object interaction, however, does not take place via mouse. The mouse only serves to navigate the object tree, it represents a mental act the player avatar would execute: It's equivalent to the "examine" command in text adventures. To actually flush the toilet, gradually open/close the door or a water valve, you use keyboard keys. Which ones? The ones that are shown at the bottom of the screen in the reserved black letterbox-layout bar. They are already shown while you hover with the mouse, so you immediately see what objects you can interact with, something the player will probably appreciate a lot. So, in addition to the standard keys (WASD and whatever else there will be), you get object-relative interaction keys. Optionally, the standard keys could be displayed at the bottom, too, but only while in the game, not in hover mode. Tutorial feature half solved.

Breadcrumbs: What selecting an object with the left mouse button did was not just to freeze the hover-effect but also to "focus" the avatar attention on it (See realtime interaction keys.), so it's a good interface metaphor. The object hierarchy path to the object will be added to the breadcrumbs at the top of the screen:

New York  Hell's Kitchen  'Ton Hotel  Paul's apartment  [Livingroom]  compartment behind painting  keypad

The rectangular brackets surround the location the player is in. (There might be some redundancy involved. The 3D array for the tiles is a building, hence plot of land, city etc. is practically defined for each tile, but to express which tile is in which "sector" or "room", a parallel CBOS tree would be required.) The kicker is that while in mouse mode, you can also hover over the individual breadcrumb elements, getting the description and, if not "left" of your own location, also contained objects. Same rules apply: Left clicking focuses on the object. So, you can easily browse the tree backwards, e.g. from "ring in box in drawer in desk in room" straight back to the room, or to the desk.

Game clock: If you hover over the date and time shown at the right top, you see a log of story steps you have already taken, incl. the time when this happend. From time to time, this list might be interrupted by short synopses. At the bottom, there would be a summary of the story opener text. At the top, you see the a summary of the current story state (e.g. "The League of Overzealous Medical Scientists (LOMS) has found out about you. You figure that it would be better to avoid being captured by them.").

Player avatar inventory: The avatar could itself be a complex object system, so that you could e.g. put an object into your mouth, or affix a backback to your back. In any case, the containers you have (Or just the one inventory.) could simultaneously be weight- and volume-based. The objects would be available via the mouse hover system (and maybe also a shortcut mechanic), so to give some kind of realism to them, a simple weight and volume (In liters.) value could go a long way. Can't fit the keyboard into a jeans pocket. Can't hold object x in hand because player strength is still too low. Capacity and usage could be shown by bargraphs or a percentage, which would be realistic.

**STEALTH**

Well, if you want to make it simple yet still interesting, just add a "hide" interaction for the photocopier, the bed, etc., plus some variables depending on the object, e.g. when hidden under table, you're less visible *the closer* the guard is because of the vertical angle, but you're safer "behind" the photocopier the further away the guard is. Otherwise, use a cone of vision and a visual obstruction simulation based on the tiles.

**NPCs**

Yeah. Still thinking about that one. But [A\*](http://www.redblobgames.com/pathfinding/a-star/introduction.html), some intentions, some preferences as to the situation ("This door should not be open!") etc., are easy to do, nothing revolutionary.

**REALTIME ACTION**

Such a game would of course be ideal for a turn-based approach, but I personally like the realtime approach better, because you really experience how you e.g. are opening or closing a door by holding down your keys. Lockpicking would also be much more impacting if it were a realtime task. And what about holding down a key to pee? If you just program a pee action that takes 20 seconds (plus bladder fullness \* constant), how do you deal with a car outside that exploded 5 seconds into the action?

Since every CBOS object would get a simulate() call on every game step, some of which would actually do something (e.g. toilet tank refilling), a 30 or 60 FramesPerSecond gameloop is out of the question. Ok, you could just do a realtime thread with an actual move-from-tile-to-tile scroll effect plus a simulation thread, the latter only being called e.g. twice a second, but the goal was "as crappy as possible for quick implementation, while also as complex/enabling as possible". I think that a choice of 200 ms to 1000 ms per gamestep is reasonable. I personally opt rather for 200 so that possible bar graph changes while the player performs a realtime action are still reasonably animated. Also, there might be highly interactive actions like lockpicking that require a more fluent interface. Finally, there's moving/running: The higher the resolution, the more believable various speeds can be communicated, instead of having to resort to "dithering", multiple field moves etc.

----

**SUMMARY**

So, what is this? A very easy to implement template for text adventures with spatiality, where the concreteness of the tile-map does not cripple the fantasy of the player and is soon "read" like words in a text. Complex object interactions are possible, complex object trees (Why not even have a simulate call to the avatar's organ objects? Or select "bladder" object, "open valve" xD) What's possible is almost entirely up to the game designer. Invent to your heart's content. 




 http://atheist-experience.com/archive/?y=2014

Only the other links remain, but the video links are gone. No info on the page or frontpage.

Screenshot in case our realities differ: http://i.imgur.com/E9rTktS.png 









 A tough nut to crack. But impossible?

The kind of text-adventure I have in mind is closer to a MultiUserDungeon than to InteractiveFiction (but will be single player): There will be lots of simulation, and the world (incl. the NPC and the player avatar) will be a container-based hierarchy, so you can find a ring in a box in a drawer in a desk in a room in an apartment in a floor in a house etc., and every object in the world will get a simulation call per gamestep (Gamestep size is 1 second, time progresses only if the player does something.)

I'm basically trying to implement "Thief"- or "Deus Ex 1"-like gameplay but via the open-to-your-fantasy approach that the abstract (read: non-spatial) world structure and description offers. Not 3D and not 2D but text - this also allows much deeper simulation. And many things that DX1 offers, I can make happen.

But even though I have been thinking about the spatial-gameplay-problem for quite a few hours (not just now but also months back), I can not find the solution for scenarios like these:

* Distance measuring e.g. for aiming/shooting or view checks: How could the player be at one end of a corridor, and a guard enters the corridor at the other end, too far to be dangerous, but the player needs to do something about it? In a room-based approach, the guard and the player would be in the same room, period. I thought about maybe secretly separating larger rooms into several, but 1) the inconsistencies that would inevitably occur (This room 2 sections, that room 5, and the section size is even different.) plus the fact that I would have to design *a lot* more (though some aiding procedures might nullify this concern) speak against this. Another candidate: To denote locations of objects by units of length, but this would open a whole can of worms.

* How could the player hide *behind* a person in a room? Normally in a text adventure, you either see what's "here", or you don't. There's no viewing direction, and no relative position (not to my knowledge).

* How could the player secretly move past a (maybe constantly turning) camera, maybe behind obstructions like a desk? Of course, there could be a specific "hide behind obstruction" feature for candidate objects, but the term "behind" is a problem here, what if the object is next to a wall and any "behind" is still in view? And what if the camera has moved on and so could you - is the next spot or the path to it clear?

I already solved ladders and the stacking of boxes, but these other quite essential things just don't want to fit the format.

Is there really no way?

Different view, same topic:

In DX1, at the end of the training, there's a demo scenario in a large hall that is split along its long axis by a river-like pool. On your river bank, a battle robot patrols. You have to get to the far end of the hall and to the other side of the river. This can be solved relatively easily because the location and the movement of the robot are almost 1-dimensional, so indeed units of length could be used to make this happen. But this is an exceptional situation. Or are there specific (but different) solutions like this possible for considerably different 3D stealth-action game like situations? 




 ~~[Deus Ex 1 script etc.7z](http://s000.tinyupload.com/index.php?file_id=78244512708258032480) 2 MB~~

[Deus Ex 1 script etc.7z](http://s000.tinyupload.com/index.php?file_id=02218015918116915574) 3 MB - Same files, plus the Gamasutra Postmortem of DX1. There's also a YouTube [video](https://www.youtube.com/watch?v=HOPHmbulMp4) showing a playthrough with Warren Spector which I downloaded, but it's 509 MB. Both thanks to Erestyn's comment. And thanks a bunch for the upvotes, didn't expect this to be received by /r/gamedev this well.

[screenshot](http://i.imgur.com/izBB3je.png) of collapsed FreeMind tree

[screenshot](http://i.imgur.com/FHKGSzA.png) of some unfolded branches which have short text. (Most texts exceed the screen size by a few times.) Btw., some nodes have their body text on the previous level already.

Sorry, didn't know where to post this. Since I already did the work of splitting the complete DX1 script (by Luke Kowalski, Anton Forsander) into nodes in a Freemind document (2 hours), I thought that others should have it, too.

And since this could serve as a demo for the usefulness of Freemind as a tool for gamedev, I just put it here.

----

**Archive contents:**

* DX1ScriptAsFreemindDocument.mm
* [GameFAQs - Deus Ex (PC) Game Script by FAQ GOD.txt](http://www.gamefaqs.com/pc/250533-deus-ex/faqs/51057)
* [The Deus Ex Bible (Rehost)](http://www.nanoaugur.net/dx/bible/)
* [Gamasutra - Postmortem - Ion Storm's Deus Ex](http://www.gamasutra.com/view/feature/131523/postmortem_ion_storms_deus_ex.php) (All 5 pages.) 




 EDIT: Made a repository on BitBucket.

https://bitbucket.org/train_subject9394/simpleskillbasedhacknslash

The current build is almost perfectly identical to the one from August.

It's **Java 7** by the way.

----

I had this idea at some point this night and spent the whole day implementing it, and it works quite nicely. It's a very simple turn-based hack slash to demonstrate the game mechanic.

Screenshots: http://imgur.com/a/Uc1F4

Java console game: http://speedy.sh/EbmY4/SSBHNS-2014-08-24.jar (13.8 KB. Start in console with 'java.exe -jar "SSBHNS-2014-08-24.jar"')

Source code: http://pastebin.com/7d1CaMtr (So you don't have to trust someone's executable.)

----

I chose a bracket-counting approach: The player sees a String like ",!.[]|].." (Depending on the foe, its current life points, and the progress-dependent difficulty.) for about a second, then the player is asked to enter a number, which in the example case would have to be -1. The closer to the correct value, the greater the success when attacking or defending.

This can even express the nature and kind of foe, how high or low the foe's health is, and even if the player is currently irritated: In the demo, if you suffer a critical hit (A hit that takes more than 1/4 of your current health.), you are dizzy for a whole round, and then the cryptic string is not shown as consecutive characters, instead it is randomly spread over several lines.

Since I had to playtest this thing a lot today for balancing, I can say that it is an interesting and working approach, that it is somewhat fun, and that e.g. the dizzy-effect does just what you'd expect it to. 




 [x-post from r/devblogs and r/GIMP] 

http://nuclearnapalm.com/2014/08/transform-gimp-photoshop/

The other posts, which had actually been made by the author /u/Nuclear-Napalm:

http://www.reddit.com/r/devblogs/comments/2dyb94/how_to_transform_gimp_into_photoshop_using_dark/

http://www.reddit.com/r/GIMP/comments/2dycbg/dark_theme_and_hotkeys_mapping_how_to_transform/

x-post triggered by these comments:

 but you'd get a lot more eyes on if you posted it in /r/gamedev, or possibly some digital art subreddit.

 [author] I also posted in GIMP subreddit, but probably /r/gamedev is a good idea too. Thanks for suggestion.

That was 1 day ago, and you guys are *still* missing out. So here it is. 




 I'm making a text adventure game and am currently working on a television object. There will be a few channels. Just because it's so easy, I thought to put in a Bible channel where random excerpts are read to the audience. Same for Quran, was equally easy.

I would like to add a skeptic/atheist channel, too, but couldn't find a nice long text as material for this.

Do you guys have any suggestions?

(While we're at it: Any suggestions for other channels?) 




 http://www.reddit.com/r/gamedev/comments/2dior8/its_the_rgamedev_daily_random_discussion_thread/cjpwzy6?context=5 



















 You play an NPC in someone's video game. You observe that the player is in a fight and loses. The guy in front of the screen, about whom you don't know at all, loads a savegame, so everything is reset to an earlier situation.

For some reason, you become aware of this.

(The cause for reload needn't be the player losing in a fight, but it should be something that is understandable, or it would be weird / bad for this game if there's suddenly a reset for no apparent reason.)

This could lead to all kinds of game ideas. For example:

----

A "new game +" based game, conceptually like [Rogue Legacy](http://store.steampowered.com/app/241600/), where you keep your NPC stats while the whole world around you resets every time the player loses. This could e.g. be used in the following way: You lose accumulated values in between new levels, but each full level you achieve stays with you. Levels could be individual per stat, so you'd have decimal values that slowly rise, and once the next whole number is reached, that number stays. Items could get lost on every reset, if you can adapt the means by which you obtain items depending on what your stats are like, e.g. if you're strong, go to a better (but more dangerous) source.

But the game reset could also have *advantages* of some sort for you. One of which could be that everybody loses their stats while you stay strong and can hence reign supreme. Because of this (or another such reason), it could be in your interest to *help* the player survive longer, but on other occasions you might be interested that the game gets reset.

----

Alternatively:

The fact that you become aware of this gives you profound insight. Is reality only a simulation, or what's going on here? This could lead to all kinds of story/gameplay, in the most extreme even to you somehow being able to gather/design/assemble parts for / via a 3D printer, so that you could become an entity in the *real* world there the player also exist. In the less extreme variant you'd explore the digital reality in the computer beyond the game. Even less extreme, you'd roam freely in the game, gathering more and more knowledge, hence being able to become the ruler of that world, or even obtain god-like powers.

Btw., the way in which you become aware of the situation could be that you increasingly (= less transparently) see your locations in previous runs on the screen, kinda like some racing games show your previous laps by drawing your car in transparent several times simultaneously in different places.

Maybe the closer you get to such a location, the more visible it becomes, so the first few runs would be about you having to kinda "increase the glow" until it reaches a certain level, and then some magic badaboom screen effect takes place and you are henceforth freed from this cycle of resetting things, so you can move around freely even though there was a reset, or you henceforth keep your stats, or whatever.

----

This idea was inspired by the loosely related post "[Not a well thought out game idea: Henchman](http://www.reddit.com/r/gamedesign/comments/2cjoeb/not_a_well_thought_out_game_idea_henchman/)" in /r/gamedesign. 




 To get a feel for how this should go, think of the situation in the zoo where Harry accidentally makes the glass of the boa constrictor cage disappear.

http://harrypotter.wikia.com/wiki/Harry_Potter_and_the_Philosopher%27s_Stone CTRL+f "zoo"

The movie/story would just depict part of HP's young life without a distinct story arc behind it, the focus would instead be on what the title says: Situations, and human emotions (kind of the opposite of Hollywoods usual way of dealing with a superhero discovering their powers, which usually rather is like "Umm, ok. What's for breakfast?").

PS - If you find the title to be a little long: I copied it from my old post to /r/OneLineMoviePitch :] 




 Repost of a [post](http://www.reddit.com/r/ProgrammingPrompts/comments/26a8eg/create_a_text_adventure_with_simulation/) I made 2 months ago in /r/ProgrammingPrompts ("1,535 readers") - please also check the comments section there for more inspiring ideas/thoughts.

----

----

Interactive text-based stories, where the magic happens in the head - not new. But I haven't seen one with a simulated world in the background yet.

This idea is for beginners and pros alike - just pick your level of complexity.

----

Example: "You are in a kitchen. You see a stove, a fridge, a ceiling lamp, a switch, and a sink. There is an open door to the north, a closed window to the west."

The objects in the room have properties, the room itself has an environmental situation (e.g. air pressure, smells, temperature), the player also has properties (e.g. when the light is low or the player is blind-folded, the data retrieved via the eyes is limited/removed, so the text is changed accordingly, all by procedure instead of manually typed!).

On every game turn, simulate(); is called on all existing objects in the game world. So, when you return to room X, the fruits in the bowl on the table might have become a little less fresh.

----

Some ideas:

* The game could either be turn-based, like the classic ones, or it could be in real-time in 1-second-steps, and as soon as the player starts typing, the game is paused until the input line is empty again. Alternatively, the whole input could happen via dropdown-menus: The moment a menu is opened, the game is paused. I attempted this a little, works very well - there was an "exits" menu, a "you" menu, and an "objects" menu.

* Simple "sound rendering": Sounds could be muffled or too silent to identify. One sound could be "drowned out" by another one, so that you e.g. have to turn off a washing machine to be able to hear/identify the person imprisoned behind the secret wall. One way to do this, for example, could be to describe the sounds a bit to the machine. http://en.wikipedia.org/wiki/Audio_frequency is an interesting resource for this. Based on it, one could describe with a boolean or double the significancy and volume of 4 or 5 frequency sections of the sound in question. This would allow to calculate how much a sound might be overridden by another one, to determine if it should be described to the player clearly, in a very coarse way that could be interpreted freely, or if the sound isn't described at all.

* Simple "light rendering" - or should I call it "em radiation rendering"? http://en.wikipedia.org/wiki/Electromagnetic_spectrum Nuclear terrorism, here we come! (Hi FBI.)

* Player and other beings could have rather complex and simulated stats, e.g. body temperature, hunger, weight, height, stance (Can you see the police car outside through the window while being bound on the floor?)

* Talking about police: NPCs could gather information (with some Garbage Collection to prevent data overkill), so if you drive your van to the city park and abduct someone, the police might be able to browse the tree of available options/objects to pick up an informational trace and ultimately get to you. I know, totally insane, but I believe it's not impossible. On the other hand, during your next game, you might play a cop yourself! An open self-experience system?

* Once you have a working system with rooms and some objects, start writing a world generator so that you have fun exploring your simulation while you're writing it. Tests will probably be pretty inspiring for the overall project.

----

Suggestions:

* After a few attempts, I have figured out that the object model should use soft links, meaning that the objects should refer to each other via an ID number (e.g. 64 bit long), because ultimately you will face the beast that saving/loading is, and loading while related objects don't exist yet is a pain. Better just use soft links and look everything up in a manager class that also does the loading/saving.

* Every object (hence the master class from which all object classes inherit) should have an inventory. You could add flags and checks for/against the player/simulation using it, but it's good if it exists. E.g. put an object into your mouth. Or define buildings by "house contains floors which contain apartments which contain rooms" etc.

* Additionally, each object might have a variable list (in Java, it would probably be a HashMapString, Object), because that's again much easier to save/load than creating extra variables in each object and then having to deal with those.

* If you want to make a toilet (or whatever other kind of world object), my attempts have shown that it's best to create a separate class for every kind of object instead of trying to build the omni-object.

* Go crazy! E.g. in my realtime-attempt (Java) where input happened via dropdown menu, I made a toilet where you can lift/lower the lid and the seat (each pushing each other), you can flush, and you can abort the flushing which means that the next flush works right away but is shorter (the tank refills in realtime, the rest is logical - See the beauty of simulation versus just writing the story?). It's easy and fun to write world-objects like these, and they are easy to extend: Say, the toilet does not refill if the incoming water pipe is turned off. Of course you still have a free flush. Alternatively, you might be imprisoned and might need water. Hard choices have to be made, especially if you also simulate bowel movements.

* Again, go crazy: It's a *text adventure* system! Well, you can't just make up *anything*, because you have to give it some reality via simulation, but otherwise: Sky's the limit! Processing time is not an issue. Why shouldn't a turn take a few seconds? Do all the things you wished were in your favorite 3D action adventure game, but they didn't put it in because of development constraints, marketing, or simply because everything at once can't be done on today's PCs. But I double-dare you: DON'T fuck up the FoV! 




 I've read r/atheism's [guidelines](http://www.reddit.com/r/atheism/wiki/guidelines), the [rules of reddit](http://www.reddit.com/rules), and the [reddiquette](http://www.reddit.com/wiki/reddiquette) before making this post. Please don't let this honest effort to ensure a proper post go to waste by dismissing this at trolling, please allow others to find this.

----

I believe to be God, and that this is the beginning of the apocalypse, but I am not sure. Our interactions should leave you with a change in your personal life's flow (events, feelings, thoughts, the need to cough, deep-penetration-associations, ...) that you can detect/decipher in the next weeks, *starting* today (but today you'd really need a microscope). So, why not wait before posting? Because I want to get this show on the road already. The faster it happens, the earlier the dying of about 153,000 humans per day (worldwide) ends.

Ask me anything, e.g. about the creation of the world (which I completed about 13 years ago :) or how I plan to govern the future of mankind. These interactions should trigger the effects, should leave me with valuable data regarding the state of things, and should definitely accelerate things a wee bit. 




 In my near 2 years of Java, I have often come across this problem, so overall I can say that it took me *days* to find this solution (which ultimately I found [here](http://stackoverflow.com/questions/9180408/how-to-use-jscrollpane-within-the-center-of-a-borderlayout)). I always evaded the problem with a different approach so far.

An example:

I have a JLabel with multi-line text (made possible by wrapping it in HTML/BODY tags). I added that to a JScrollPane. I added the pane to a JPanel in BorderLayout.CENTER.

This was unsatisfactory, the available space was not used. Only when the content grew large enough, the pane used all space and showed the scrollbar. Adding the pane to NORTH instead seemed to work - but once the content was large enough, the NORTH section would just start to eat up the rest of the vertical space (e.g. the SOUTH part would be squished).

The solution is simple (once you know it):

I put the JLabel into a new JPanel whose layout is FlowLayout (alignment left), then made the JScrollPane with the JPanel instead of with the JLabel. Done. Good night.

This took way too long. 




 Most games today have broken volume sliders: Between full volume and, say, 60%, you hear almost no difference. The programmers just blindly applied the 0to1 factor and moved on. Please don't make the same mistake when it's 1) so obvious and 2) so easy to fix.

Short and to the point volume slider problem info:

http://www.dr-lex.be/info-stuff/volumecontrols.html

Some formula suggestion for the problem:

http://stackoverflow.com/questions/1165026/what-algorithms-could-i-use-for-audio-volume-level

----

Let's say you have walk sounds for grass, stone, gravel. Instead of doing a hard switch between them, you could play two simultaneously with different volumes resulting, as a sum, in full volume (and please regard the above topic, it applies here, too). If your map even has mixed ground or soft transitions, that would fit perfectly.

In a Thief-like game, you could mix the various footstep sounds according to walk speed.

But that's only a very primitive way to benefit from this cheap "additive synthesis" approach.

What if you want to express that a sound is playing inside a container / behind a wall in another room? You could use a low pass filter to muffle the higher frequencies. But if you don't want to get that sophisticated or want to work with e.g. vanilla Java, you could just prepare the original, slightly filtered, strongly filtered sound and then play them mixed according to situation.

You could even record spittle and gargle sounds and overlay them over speech samples at various volumes according to the degree of illness or the degree of blood-in-the-mouth or degree of zombie-transformation.

Car engine sound could be recorded as a smooth, round variant and as one where you can hear the nailing of the cylinders.

etc. 




 You've probably come across the Runnable interface in the form of

    SwingUtilities.invokeLater(new Runnable(){
        @Override
        public void run() {
            // Swing stuff. All of it needs to be executed on the AWT Event Dispatcher thread, that's what you use invokeLater for.
            // Btw, you can also use this construct while you're already on the AWT thread:
            // The commands in this block will be executed once the AWT thread is done with *everything* else,
            // so if you need to work with the completely updated UI (e.g. size of components
            // after a revalidate() call), you can make use of this construct.
        }
    });

The concept behind the Runnable interface is mighty awesome really: You can give one of your methods an arbitrary code block to execute! Remember how it was without Runnable, when you had to give a method e.g. an int and then create an if or switch block which would decide what method to call? With Runnable, you can just hand the code to be executed to the method directly - and other stuff.

You could for example use a setter in a class: "setCodeForShutdown(myRunnable);" And when that class is shutting down the program, you can have it execute that code first. Or you could create a HashMapString, Runnable() and use a Scanner(System.in) to type commands and have them execute with two more lines of code.

Of course you can create your own interfaces that use the same concept, because Runnable is not special at all - it's just employed by the Java libraries in so many places that it has a special status. Your interface could e.g. have two run()-like methods, one for normal execution and one for a special situation.

----

But what really kicks the Runnable interface concept through the roof is when you use Java 8. Consider this code:

    final public class MyApp {

        final public static void main(final String[] args) {
            SwingUtilities.invokeLater(new Runnable(){
                @Override
                public void run() {
                    startUI();
                }
            });
        }

        final private static void startUI() {
            // create, initialize, and show JFrame
        }
    }

In Java 8, you can write the call in this shorter form (this is the famous **Lambda**):

    final public static void main(final String[] args) {
        SwingUtilities.invokeLater(() - {
            startUI();
        });
    }

But since the run() method body is only one command, you can even write it shorter:

    final public static void main(final String[] args) {
        SwingUtilities.invokeLater(() - startUI());
    }

If you think "Ok, I knew all that.", what about this then:

    final public static void main(final String[] args) {
        SwingUtilities.invokeLater(MyApp::startUI);
    }

This is another novelty of Java 8 - a **method reference**. You can use it entirely as a replacement in your Runnable (and similar - more about that later) situations, for example:

    final Runnable r = MyApp::startUI;
    r.run();

This works and behaves as intended! Remember that startUI is not in any way special - it's not a class or anything, it's just a plain old method. Before Java 8, you would *have* to declare a class (e.g. an anonymous class) to do such a thing.

An example for the instance of a class:

    final MyClass myClass = new MyClass();
    final Runnable r = myClass::myNonstaticMethod; // you can even use "this::myMethod"
    r.run();

Now, finally, an example that does not use Runnable:

    private static interface PaintMethod {
        void paint(final Graphics2D g, final MapEntry mapEntry);
    }

    final private static void paintSomething(final Graphics2D g, final MapEntry mapEntry) {
    }

With this prepared, we can now do this in a method:

    final PaintMethod pm = MyClass::paintSomething;
    pm.paint(g, me);

See? You can also use method references like this for methods with parameters. The Runnable interface is not special.

----

If you want to code in Java 8, to my experience (Which might be wrong.), you need IntelliJ at this point, because Eclipse does not yet seem fully ready for Java 8. The downside is that in IntelliJ you would have to choose the "javac" compiler instead of the "Eclipse" compiler (because the latter only works up to Java 7 at the moment), and the "javac" needs an error free project while the "Eclipse" compiler can compile anything just fine as long as the methods called are error free. Btw: The Community Edition of IntelliJ is free and fully allows to create commercial software. I used Eclipse for 1 year, then tried IntelliJ and am happy that I did so. But you can switch back to Eclipse at any point, it's not like IntelliJ swallows your project and doesn't give them back any more, it even has an exporter for Eclipse, but you can just work on your Eclipse project with IntelliJ for a few minutes, then close it and continue in Eclipse without need for an export. 




     ... 
    |  |  | 
    ... 
    |  |  | 
    ... 

(I used two horizontal for each one vertical just because of the font proportions.)

There will be a 3D array of rooms. Each room can have 6 possible walls. Obviously, rooms 0,0,0 and 1,0,0 share a wall slot.

I am looking for a good practical data structure to store this. I currently have two candidates, but they rub me the wrong way.

Candidate 1: A wasteful array.

    01234
    ... 
    | | | 

This would waste 9 entries for a map as scribbled at the top (which has 25 entries). On the room layer. If we imagine to denote the ceiling/floor layer of one story, even 21 of the 25 entries are wasted. And handling this array wouldn't be *that* easy, even though it seems simple enough at first. It's error-prone.

Candidate 2: Four arrays.

- the rooms XZY
- the walls along the leftright (X) axis, XZY
- the walls along the updown (Z) axis, XZY
- the walls along the vertical (Y) axis, XZY, also known as floors/ceilings

I assume that the bulkiness of the task when it comes to data structures is due to the nature of more than one dimension. (Most of the things I wrote would apply to the 2D version of this, too.)

I also consider a 3rd approach: A box-class that has 6 wall slots. But this one sucks, too: Two adjacent boxes would share walls, so it's *yet again* quite unhandy.

Any suggestions? 









 Interactive text-based stories, where the magic happens in the head - not new. But I haven't seen one with a simulated world in the background yet.

This idea is for beginners and pros alike - just pick your level of complexity.

----

Example: "You are in a kitchen. You see a stove, a fridge, a ceiling lamp, a switch, and a sink. There is an open door to the north, a closed window to the west."

The objects in the room have properties, the room itself has an environmental situation (e.g. air pressure, smells, temperature), the player also has properties (e.g. when the light is low or the player is blind-folded, the data retrieved via the eyes is limited/removed, so the text is changed accordingly, all by procedure instead of manually typed!).

On every game turn, simulate(); is called on all existing objects in the game world. So, when you return to room X, the fruits in the bowl on the table might have become a little less fresh.

----

Some ideas:

* The game could either be turn-based, like the classic ones, or it could be in real-time in 1-second-steps, and as soon as the player starts typing, the game is paused until the input line is empty again. Alternatively, the whole input could happen via dropdown-menus: The moment a menu is opened, the game is paused. I attempted this a little, works very well - there was an "exits" menu, a "you" menu, and an "objects" menu.

* Simple "sound rendering": Sounds could be muffled or too silent to identify. One sound could be "drowned out" by another one, so that you e.g. have to turn off a washing machine to be able to hear/identify the person imprisoned behind the secret wall. One way to do this, for example, could be to describe the sounds a bit to the machine. http://en.wikipedia.org/wiki/Audio_frequency is an interesting resource for this. Based on it, one could describe with a boolean or double the significancy and volume of 4 or 5 frequency sections of the sound in question. This would allow to calculate how much a sound might be overridden by another one, to determine if it should be described to the player clearly, in a very coarse way that could be interpreted freely, or if the sound isn't described at all.

* Simple "light rendering" - or should I call it "em radiation rendering"? http://en.wikipedia.org/wiki/Electromagnetic_spectrum Nuclear terrorism, here we come! (Hi FBI.)

* Player and other beings could have rather complex and simulated stats, e.g. body temperature, hunger, weight, height, stance (Can you see the police car outside through the window while being bound on the floor?)

* Talking about police: NPCs could gather information (with some Garbage Collection to prevent data overkill), so if you drive your van to the city park and abduct someone, the police might be able to browse the tree of available options/objects to pick up an informational trace and ultimately get to you. I know, totally insane, but I believe it's not impossible. On the other hand, during your next game, you might play a cop yourself! An open self-experience system?

* Once you have a working system with rooms and some objects, start writing a world generator so that you have fun exploring your simulation while you're writing it. Tests will probably be pretty inspiring for the overall project.

----

Suggestions:

* After a few attempts, I have figured out that the object model should use soft links, meaning that the objects should refer to each other via an ID number (e.g. 64 bit long), because ultimately you will face the beast that saving/loading is, and loading while related objects don't exist yet is a pain. Better just use soft links and look everything up in a manager class that also does the loading/saving.

* Every object (hence the master class from which all object classes inherit) should have an inventory. You could add flags and checks for/against the player/simulation using it, but it's good if it exists. E.g. put an object into your mouth. Or define buildings by "house contains floors which contain apartments which contain rooms" etc.

* Additionally, each object might have a variable list (in Java, it would probably be a HashMapString, Object), because that's again much easier to save/load than creating extra variables in each object and then having to deal with those.

* If you want to make a toilet (or whatever other kind of world object), my attempts have shown that it's best to create a separate class for every kind of object instead of trying to build the omni-object.

* Go crazy! E.g. in my realtime-attempt (Java) where input happened via dropdown menu, I made a toilet where you can lift/lower the lid and the seat (each pushing each other), you can flush, and you can abort the flushing which means that the next flush works right away but is shorter (the tank refills in realtime, the rest is logical - See the beauty of simulation versus just writing the story?). It's easy and fun to write world-objects like these, and they are easy to extend: Say, the toilet does not refill if the incoming water pipe is turned off. Of course you still have a free flush. Alternatively, you might be imprisoned and might need water. Hard choices have to be made, especially if you also simulate bowel movements.

* Again, go crazy: It's a *text adventure* system! Well, you can't just make up *anything*, because you have to give it some reality via simulation, but otherwise: Sky's the limit! Processing time is not an issue. Why shouldn't a turn take a few seconds? Do all the things you wished were in your favorite 3D action adventure game, but they didn't put it in because of development constraints, marketing, or simply because everything at once can't be done on today's PCs. But I double-dare you: DON'T fuck up the FoV! 




 I've been doing Java for over a year, and for String comparisons I often had to do .toUpperCase (or toLowerCase()). I can't believe I overlooked equalsIgnoreCase until now! Just saw it over at /r/javahelp. 




 I personally don't like it in applications when I have to wait for tooltips to appear (which is the default), and I absolutely despise it when they disappear before I have read them completely. The former is a question of taste, the latter is not. For my applications, I have set the tooltip delay to zero and the duration to about a month (which is max).

But they do get in the way because for some retarded reason, the Java team (which moved mountains and is awesome otherwise) decided that Java tooltips are not transparent to mouse events. When I was just now adding tooltips to dropdown menu entries, they just got *too much* in the way, and after two hours of fumbling, I found a simple and elegant solution:

Just set ToolTipManager enabled=false (which dismisses current tooltips) and immediately enabled=true for every mouse move event. Bonus effect: The tooltips move with the mouse pointer.

----

**EDIT:** Improved the appearance a bit. Java's ToolTip system is really improper: If your tooltips have to be pushed to the left because they reach the screen's right end, they show considerable flicker behavior. I have even had cases where they had just been plainly black. To reduce the flickering, I introduced a counter.

----

    final ToolTipManager toolTipManager = ToolTipManager.sharedInstance();
    final int flickerReduction = 10;

    toolTipManager.setInitialDelay(0);
    toolTipManager.setDismissDelay(Integer.MAX_VALUE);
    toolTipManager.setReshowDelay(0);

    Toolkit.getDefaultToolkit().addAWTEventListener(new AWTEventListener() {

        private int eventCounter = 0;

        @Override
        final public void eventDispatched(final AWTEvent e) {

            eventCounter++;
            eventCounter %= flickerReduction;

            if (eventCounter == 0) {
                toolTipManager.setEnabled(false);
                toolTipManager.setEnabled(true);
            }
        }
    }, AWTEvent.MOUSE_MOTION_EVENT_MASK); 




 An idea that keeps running through my head, so I have to get it out: Letting your in-game character walk/run by pressing one key for the left and for the right leg.

Press control for L: Left leg steps forward. Press R: Right leg. L: Left. ...

If you do this synchronous with the game, your character will just move with the speed you mirror with your inputs. If you do it faster, the character will pick up speed, the animation will smoothly change from relaxed walking to fast walking to running.

If you fall out of rhythm, the character will move slower or, if you totally fall out of it, will quickly reduce speed to walking and then standing still (but will probably jiggle a bit since you're still giving the legs commands to move).

A player could even assign the L key to CTRL left, the R key to CTRL right: When we walk and run in real life, we're moving our arms with this in rhythm. So inputting the action like this might even trigger our muscle memory and give a deeper experience.

This approach might ALSO be used to rotate your character to the left and right even, for advanced runners.

----

Another example: An adventure game like Monkey Island, but in 3D first person, which is not a new idea. But what if you hold down a key which will give you, while the key is pressed, a mouse pointer and a small menu next to all visible objects in reach listing the possible interactions. This would be an efficient and smooth way to solve the "narrow interface tunnel between reality and the game-reality" problem that hampers game experience. Just move around in the world, and whenever your will desires to interact, hold the key and see the possible interactions, move the mouse pointer, click. It would feel efficient and un-hindering. The mouse pointer could start in the center of the screen every time, except if the player hasn't changed the viewing direction / position much.

----

What ideas in this line of thinking (See headline.) do you have?

Sidebar-rules: I don't think that this violates submission rules, because this is just a way to discuss the topic, it doesn't ask for people to list games they like etc. - The idea is to come up with new interface ideas and possibly new game-play ideas along them.

I'm asking for possible new meaningful ways to interface with your in-game character or other aspects of the game world. Think "virtual reality", forget the decade and tons of games we have, don't be imprisoned in existing solutions. Take into account that the respective game's topic/game-play could be entirely different than existing ones - like e.g. Mirror's Edge. The game could well be designed around the mechanism you describe. 














 Follow-up question: Would this mean that in Germany, the sales are over at 19:00? 









 (Hey, why not. Know your enemy.)

http://www.ifixit.com/Teardown/Xbox+One+Teardown/19718

http://www.ifixit.com/Teardown/PlayStation+4+Teardown/19493

German article by the famous Heise company comparing the XBOX1 and PS4:

http://www.heise.de/meldung/Angetestet-Xbox-One-gegen-PS4-2052893.html

Forum claims that it's slightly biased towards PS4, but I can't tell.

Fun fact: It seems that both consoles are too loud to be used as music players. My PC is almost perfectly silent, so I just found an additional reason to be glad to be a member of the glorious PC master race.

...

EDIT: Additional info that I happen to stumble over.

http://www.eurogamer.net/articles/2013-11-20-all-the-xbox-one-launch-games-and-their-install-sizes 














 Games could just use hard-coded keys/buttons, and this input configuration library/interface would switch around everything before it even arrives at the game software. It should be an open library so that it's not bound to Steam. But Steam would be ideal, given that they already have their Steam overlay - I mean, it would be best if this universal input configuration system could be accessed without having to leave / Alt-Tab from the game.

So, again, in case it wasn't clear: In games, you can configure what keyboard or mouse button fulfills which function. But instead of implementing this anew again and again (at varying quality levels :P), why not just write this *once* and improve it gradually forever? The games would just provide info (e.g. via XML file) about what functions it provides, what properties those have (e.g. toggle, hold, ...) and what hard-coded input they would use.

This could even solve the Valve software pilot demand that I have: Several Valve games need exactly the same input configuration. Walk directions, jump, duck, the works. A pilot function would be great for this. Set up once, use everywhere. 




 I imagine that if we put a lens a few meters away from the laser, we can force the incoming photons to continue their "flight" in a perfectly parallel fashion (which would allow to project a millimeter-small speck on the Moon), just as we can arbitrarily modulate incoming photons that have traveled for billions of light years.

What's the catch?

full disclosure: I read these two very informative sources, but I still don't get it:

http://www.quora.com/Is-the-light-from-lasers-reduced-by-the-inverse-square-law-as-distance-grows-similar-to-other-light-sources (June 2011)

http://www.reddit.com/r/askscience/comments/152bf2/is_there_a_such_thing_as_a_perfect_laser_do_all/ (10 months ago) 




 ----
    Windows Registry Editor Version 5.00
    
    [HKEY_CURRENT_USER\Software\Eidos\Deus Ex: HRDC]
    "g_fov"=hex:78,00,00,00
    
    
----

Put the above into a text file and call it "DX HR DC fov 120.reg". Run the file, and click OK like 25 times. That's it.

Whenever you visit the "Gameplay" options menu, the FoV will reset, so you have to run the file again.

78 is simply the hexadecimal version of the decimal number 120. Use e.g. the Windows calculator (Switch to programmer mode.) to get the value you want. Or use any of the billion online resources that supply this service.

I made myself 5 such files for easy switching, but I guess I'll stick to 120. Mine are 100 110 120 130 140 (64 6E 78 82 8C). You can use any value in between, it's not locked to an interval of 10.

I'm off now to finally play the damn game. 


































 I'm in the same boat with you: Religion, no thanks. Belief without evidence, no thanks. AtheistExperience: Hooray. (I listen to a few bits every morning/evening while playing Rogue Legacy and listening to SomaFM.com, recommended.)

This submission is supposed to be an experiment: I have reason to believe that I, umm, have a special relationship with reality, or rather: That reality (which you inhabit) has a special relationship with me. I'll detail this further down.

THE EXPERIMENT now is to see if you do experience hints of this special relationship when reading this text and interacting with me in the comments.

THE OBSERVATIONS should follow this pattern, but they should be very slight, not "fist in the face" miracles or something:

I can not become guilty. I am holy. Any accusation against me is wrong, and even makes the accuser guilty. Reality should somehow express this, e.g. by the person who has the mental attitude against me having to cough, dropping their coffee, getting an unpleasant call that pulls them back down to the ground from which they quite lifted off when letting their fantasy run wild etc.

I don't mean to offend, I mean to conduct an experiment AND further my agenda (assuming that the experiment will be a success).

Thanks for your participation. 




 I heard that BestBuy and GameStop offer gift cards that someone can redeem to add to their Steam Wallet.

Are there other such services?

Does Amazon.de offer such a service / sell something like that?

[I got an Amazon.de gift card, redeemed it, but never seem to find good game deals. So, I'd like to have it in my Steam Wallet instead.] 







































 The reason that I ask this rather non-gaming-related question here is because I want to sample the "general population". From what I have gathered over years, no one really knows/uses this function, and I find that super sad. Only once you have lived in the Hibernate universe for a while, you'll know that this would be true. Why it's not the default is beyond me: I have used it at home and in the office, on three different machines, in WinXP Win7 Win8, for years. No issues (except *very rarely* in WinXP, and nothing serious).

When I go shopping, I hit the physical power button of my PC and go. When I return, I hit it again and log in. Difference between before and after: NONE. Super comfortable. And the PC is really physically turned off, you can unplug it, carry it anywhere, resume. All windows will be where they were. [Multiple Desktops](http://code.google.com/p/mdesktop/) will be as they were. Steam continues its downloads. Videos continue playing. I can't imagine why someone wouldn't want this! I never tried it on games that only have a checkpoint system, though. They might not resume properly, but it's worth a try.

All aboard! But please tell me if you knew/used it.

If you have never heard of it: It's not super obscure, it's (As far as I have gathered.) just the diamond right in the middle of the table that for some reason nobody sees/uses.

How to:

Win8: http://www.pcworld.com/article/2016932/how-to-enable-hibernate-mode-in-windows-8.html

Win7: http://www.mydigitallife.info/how-to-enable-or-disable-hibernate-in-windows-7/

WinXP: http://www.giannistsakiris.com/index.php/2009/04/08/how-to-enable-hibernate-in-windows-xp/ 









 A reply to comments that are already there works, and hence the reply links should stay. But the main commenting box should go.

Example:

http://www.reddit.com/r/truegaming/comments/1j9bad/what_does_it_take_to_make_an_indie_game/

I searched before posting and saw Raldi's statement in [this](http://www.reddit.com/r/ideasfortheadmins/comments/bhpkz/can_we_stop_deleted_posts_from_showing_up_in_the/) thread that such posts are not to show up in the first place and that they'll fix that bug. *That was three years ago.*

Also, what if the post is not yet deleted while it's in the list, but when I click it to see the comments it is?

The only solution is to make the commenting box disappear in those posts. 




 Haven't seen the ... historical documents yet, just a ~~tr~~ excerpt. It said that two people are required because the neuronal load for one human would be too big.

If I press a key on the keyboard, and it starts a program, or if instead a nuclear bomb is exploded, pressing the key is the same. The size of the effect is irrelevant. What am I missing?

EDIT: And what's with all the downvotes? 3 versus **11**, something's wrong here. 




 There's a post with no comments. People write a few and move on. The post is still at 1 total votes. It can be assumed that those people would want the post upvoted for the visibility of the post and of the comment.

So, why not automatically upvote the post if the user commented on root level?

The vote can still be changed freely, like always. But the user *can't forget* to upvote any more. Total freedom is retained. It's just for practicality.

The example that inspired this: http://i.imgur.com/jJmBlMq.png

EDIT:

It could be a preferences-option, defaulting to off. 
























 This sequence can be created with this algorithm:

[step 1] Initialize variables: u = 1; v = 0

[step 2] u = u - v; v = v + u

[step 3] go to [step 2]

Since you probably wonder why someone would ask this: I came up with that crap about 15 years ago when I was thinking about the universe and if there might be an algorithm to describe it. I thought that the most fundamental component of its system would probably somehow be wave-like, so I thought about the most simple algorithm to create a wave-like sequence. Since it's two variables played out against each other, it even has Yin Yang like qualities. Esoteric BS ends here.

I'm just curious if this could produce a proper sinus. 




 It is sadly a polished turd that I regret having paid 20 for, an assortment of the usual shooter clichs wrapped into high quality artsy visual design (though for some reason, all paintings have stucko texture, not paintbrush texture) - Dishonored is easily 10 times as good.

The sound design is remarkably bad, as everything sounds like it's squeezed through a brutal dynamic-compressor cranked up to 15, while additionally a set of high frequencies (I guess around 5 KHz) are boosted so much that it's just unpleasant and can only be beared by reducing the volume, and this is *not* to be confused with just being too loud.

The intro movies and too small FoV slider range can easily be fixed via settings-file-adjustment (for this and other tips, see [here](http://www.pcgamer.com/2013/03/27/bioshock-infinite-tweaks-let-you-skip-intro-videos-increase-fov-and-adjust-sensitivity/)), but be warned that the savegame system is *abysmal*, you only have far apart checkpoints between which you can easily have a lot of individual small activities (looking for the few kinds of existing goodies in trashcans etc.), and all those will be lost when you quit out of frustration to play something else, which can easily happen as you can easily miss such an autosave having happened.

Supposedly, this game is a descendant of System Shock and the much better System Shock 2, and while I see that they obviously took a few elements of those games, the game itself has nothing to do with those classics, it's a flat out lie to claim that it's actually a descendant, and if I purely use enjoyment as a measure, the game is at most worth 10 (rather 5, but the design, the sky-city, the pleasant companion experience, and most of all the curiosity as to how the story will continue (something the first play-through will kill) motivate a lot). 




 Seems like I can only play 1/3 of the game.

http://i.imgur.com/9K3NAZ2.jpg

Apparently **game-breaking glitch on PC:**

You must find 6 fish. In every video I could find (all of which apparently XBOX), there are TWO fish on the ground near Gollum at the beginning of that level. You can pick both up. I have played the whole level 4 times now, but I only get 5 fish overall: There is only ONE on the ground near Gollum at the start.

One is right below the bowl where you have to toss the fish, the other would be a few meters to the right, still on the same screen. I do not have that fish. I can't finish the level. Couldn't find any info anywhere.

Steam LEGO LOTR version: 1.0.0.519643

Windows 8

I heard that the XBOX version has seen updates but the PC version is still like on initial release.

Any tips/help? 




 I am asking this *partly* in jest, but I think it's a question worth asking.

After all, blind people have no choice but to believe in things they can not see. 









 http://www.reddit.com/r/DebateReligion/comments/1g1muv/to_all_do_you_think_religion_is_really_under/

I thought it might be interesting to you guys. 



















 [This](http://www.reddit.com/r/islam/comments/1et6lw/as_a_muslim_i_find_myself_becoming_intensely/) submission in r/Islam gave me the idea.

 for not being recognized by his creation - a creation that, by comparison to Allah, is insignificant, to say the least.

So, God's work is insignificant, he wasn't able (or willing) to create something worthy of his greatness? Or did he actually pull it off - meaning that God isn't *that* unimaginably infinitely high etc., but has a quite graspable greatness? 




 There was more which I currently can't remember. Admittedly, the interactive movie that it is (It's basically Dragon's Lair with freeroam-scenes, combat and some stealth.) is very well done, and it deserves praise - but this, in turn, shows how bad the state of gaming still is. We're lauding improvements, but we fail to laud the improvement separate from the rest (which still needs improvement).

The FieldOfView is much too low, it's *work* to even perceive the landscape around you. Oh, there's a fucking PLANE? Surprise. I didn't SEE it right there in the open. The interface to the computer (keyboard, mouse, controller, 2D video, audio) is narrow enough as it is. This warrants that measures that can be taken to improve the interface *should be taken*. Instead, the developers can't be bothered to increase a simple integer number from 50 up to 100 or something.

I just quit the game for the second time in frustration, in both cases it was a quicktime event that put me off. I'm not an anti-QTE nazi, I see that they can make sense in some places. In other places, I am still willing to put up with them even though I'd wish they weren't there. But in some places in this game, they are just an impossible hurdle.

Get this: *Interface issues.* That is a topic that I have an absolute gripe with. And a quicktime-event *is* an intentional interface obstacle, so it needs good justification to be there.

So, there's this wolf that attacks you once you got that stuff in the cave an hour or two into the game. Mash left right left right, then press F, then mash E. I keep doing this, just as they say, just when they say it. (What am I, doing *homework*? This is *tedious*, that's not a game for me.) But it doesn't work. I always get to see the wolf-eats-croft animation.

And what's with the scene immediately before you enter that cave? Just when you have climbed up the last wooden "This is intended to be climbed. We are developers giving you a clue. This is not a breach of the fourth wall, return to the circle-jerking fan herd, please."-thing, *three* things happen:

* The wolfs howl and growl, insinuating that you're on the same plane with them, that they'll attack you now, so you ready your bow and, through the forced binoculars, look around. It's kinda funny that preparing to shoot narrows the FoV even further, but just a slight bit - because it's already ridiculously low. Then, as a joke, you can press Y to zoom even more. But again, just a slight bit. Because the FoV had been too fucking low to begin with.

* Lara says something that you are to process with your mind.

* A text appears at the right bottom of the screen, saying something that I couldn't process.

All this *intentionally* happens at just this point, it's not a quirky situation caused by simulation. The developers *intended* this to happen this way. The developers are hence stupid.

And what's with the interface in general? When you are at a camp, you have a root menu from which you can click yourself deeper into the topics. But you can't use the mouse to return to the root - you have to use the ESC key a few times. Also, when you choose an ability to master, you get an extra menu level where you have to confirm. This does *not* happen when you improve your gear, even though the interface is otherwise entirely the same - bad interface design. Also, the interface is cleary intended to be flashy, rather not to be useful. This can e.g. be seen when you hover the mouse over the skill etc. that you hovered over before: The flashy change-over effect happens *again*, which is entirely unnecessary since you're already there.

There were more things, I didn't think of them now. But I feel that I have to work to get my money's worth of experience. If the game would have been cheaper, I could just dismiss it.

It's a waste. Like in so many other cases, where e.g. the FoV is just too fucking low. Why do they do this? The map/graphics/engine guys did great work in this game and many other games - and then some retard decides to break everything with poor interface and FoV choices. Those people should lose their job, and this should happen so often that they get the message.

I wish I hadn't bought this. Fuck the circle-jerk for pushing this into my life. I am looking at various sources when I purchase games, but they betrayed me this time.

(r/Gaming's reception was poor, also someone suggested that r/TrueGaming would be a better place for something like this.) 




 There was more which I currently can't remember. Admittedly, the interactive movie that it is (It's basically Dragon's Lair with freeroam-scenes, combat and some stealth.) is very well done, and it deserves praise - but this, in turn, shows how bad the state of gaming still is. We're laudating improvements, but we fail to laudate the improvement separate from the rest (which still needs improvement).

The FieldOfView is much too low, it's *work* to even perceive the landscape around you. Oh, there's a fucking PLANE? Surprise. I didn't SEE it right there in the open. The interface to the computer (keyboard, mouse, controller, 2D video, audio) is narrow enough as it is. This warrants that measures that can be taken to improve the interface *should be taken*. Instead, the developers can't be bothered to increase a simple integer number from 50 up to 100 or something.

I just quit the game for the second time in frustration, in both cases it was a quicktime event that put me off. I'm not an anti-QTE nazi, I see that they can make sense in some places. In other places, I am still willing to put up with them even though I'd wish they weren't there. But in some places in this game, they are just an impossible hurdle.

Get this: *Interface issues.* That is a topic that I have an absolute gripe with. And a quicktime-event *is* an intentional interface obstacle, so it needs good justification to be there.

So, there's this wolf that attacks you once you got that stuff in the cave an hour or two into the game. Mash left right left right, then press F, then mash E. I keep doing this, just as they say, just when they say it. (What am I, doing *homework*? This is *tedious*, that's not a game for me.) But it doesn't work. I always get to see the wolf-eats-croft animation.

And what's with the scene immediately before you enter that cave? Just when you have climbed up the last wooden "This is intended to be climbed. We are developers giving you a clue. This is not a breach of the fourth wall, return to the circle-jerking fan herd, please."-thing, *three* things happen:

* The wolfs howl and growl, insinuating that you're on the same plane with them, that they'll attack you now, so you ready your bow and, through the forced binoculars, look around. It's kinda funny that preparing to shoot narrows the FoV even further, but just a slight bit - because it's already ridiculously low. Then, as a joke, you can press Y to zoom even more. But again, just a slight bit. Because the FoV had been too fucking low to begin with.

* Lara says something that you are to process with your mind.

* A text appears at the right bottom of the screen, saying something that I couldn't process.

All this *intentionally* happens at just this point, it's not a quirky situation caused by simulation. The developers *intended* this to happen this way. The developers are hence stupid.

And what's with the interface in general? When you are at a camp, you have a root menu from which you can click yourself deeper into the topics. But you can't use the mouse to return to the root - you have to use the ESC key a few times. Also, when you choose an ability to master, you get an extra menu level where you have to confirm. This does *not* happen when you improve your gear, even though the interface is otherwise entirely the same - bad interface design. Also, the interface is cleary intended to be flashy, rather not to be useful. This can e.g. be seen when you hover the mouse over the skill etc. that you hovered over before: The flashy change-over effect happens *again*, which is entirely unnecessary since you're already there.

There were more things, I didn't think of them now. But I feel that I have to work to get my money's worth of experience. If the game would have been cheaper, I could just dismiss it.

It's a waste. Like in so many other cases, where e.g. the FoV is just too fucking low. Why do they do this? The map/graphics/engine guys did great work in this game and many other games - and then some retard decides to break everything with poor interface and FoV choices. Those people should lose their job, and this should happen so often that they get the message.

I wish I hadn't bought this. Fuck the circle-jerk for pushing this into my life. I am looking at various sources when I purchase games, but they betrayed me this time. 














 (I'm not sure if this content is allowed.)

When Jesus resurrected, his body was taken from the tomb, insinuating that the flesh was re-used for the new manifestation. Maybe akin to what happened to Lazarus.

What happened to the blood that he lost? What happened to the cells/flesh that stuck to the torture instruments? Did this stuff vanish/reintegrate, too?

(Inspired by [this](http://www.reddit.com/r/atheism/comments/1dvkfa/the_power_of_christ/c9uq0wx?context=10).) 




 Title says it.

A person who believes that their child could *possibly* end up in *eternal torture, designed by the almighty*, is risking this by creating new life. How can a person make such a decision!?

Pascal's Wager. "The risk is so high that you have to submit your reasoning to it!" This is how it is being used against us. Well, it can be used against them, too, as shown. 














 It was always my take that logic itself becomes a singularity when we go back to the very first moment of time. Every datapoint we, or any human, observe can lead to an abstraction that kinda "contains" all these and other related datapoints. Many such abstractions can lead to another level of abstraction that in turn contains these abstractions (insinuating that any datapoint might be seen as an abstraction from some perspective). The "Theory of Everything" is an example for this, as it would unify General Relativity and Quantum Theory, so it would effectively contain them.

All in all, I conceptualize the world to be kind of like a 2D pyramid or a tree of logic that indeed has a root. Also, I think that this concept is applicable on every level, e.g. in everyday life, and should be taught in school, giving pupils a map of reality, so they could map out their "location" - everybody starts at the bottom and slowly climbs up with their mind. To e.g. be the President of the US, you have to have an understanding of the world that has climbed quite high up in the pyramid. This might even be the very effort that is invested into what we call "learning/understanding".

To me, it seems clear that there is a top-most point of the pyramid, which is the true meaning of the word "existence", and its discovery/definition is the holy grail of science.

But to me, it seems like this highest level can never be climbed, because all meaning fuses into one indivisible unity (Singularity.), maybe the name of it is "the truth". The Uncertainty Principle might even be the mathematical version of what I just said: It says "we know something is there, but we also know that we can't precisely know it".

The Uncertainty Principle might even state that GR and QT can not ever be united. In any case: At this point, science is beginning to pursue the functionality of logic/causality itself. This is entirely different territory than everything before.

What do you think? Does logic itself become a singularity at the very beginning of time - so, does all meaning melt into one indivisible thing there? And would this imply that certain high level concepts (e.g. GR and QT) can not possibly be united? 









 I found this old comment by user "RubberTrees" (which is quite insulting at times, but I'd ask you to overlook that for the sake of the argument, please) which makes this interesting point: The Bible does not give enough data to allow proper belief, even if you'd want to, because you're believing incorrectly/imprecisely.

I think we can assume that you will disagree with the point he/she makes.

**Why do you disagree with this point?** That's the reason for this submission.

http://www.reddit.com/r/atheism/comments/h2l53/sometimes_i_forget_just_how_absurd_this_whole/c1s3ver

 I just recently read it again from cover to cover. I took pretty extensive notes and painfully read each book.

 First of all it's really boring and hard to read. The stories are filled with disgusting examples of humanity at its worst and the god of the bible is blatantly evil.

 Some of the poetry is decent. I especially enjoyed Ecclesiastes and a few Proverbs but there is nothing in the bible that points towards a divine authorship. Nothing that even hints at omniscience. It is painfully obvious that it was written by, and for, ignorant men from an age of barbarism.

 The New testament is mainly a bunch of letters from Paul of Tarsus who never even met Jesus. Nothing in Matthew, Mark, Luke or John is very compelling at all.

 My biggest complaint is the "believe or burn" philosophy of the bible, which completely fucks everyone because the bible is insufficient for belief or knowledge of who Jesus even was.

**[START HERE]**

 Nothing in the Gospels really expresses or describes Jesus well enough where "belief in Jesus" would have any real meaning. For all the Christians know their mental image of Jesus (Yeshua) is so fucking far off base that if he is real their version doesn't even count and they still burn.

 "You've been picturing some white guy with a different name and his teachings weren't even translated correctly... fuck you, burn in hell." Yahweh (and this is completely within his character, he is insanely evil.)

 You can't just say some guys name (which isn't even his real name) picture some face (that isn't even his real face) and then read some of his words (that probably aren't even his words) and then expect some kind of reward. Especially when the god is Yahweh. (seriously, most evil creature ever created by man.)

 Christians have no fucking clue who Jesus was, what he looked like, what he was talking about or if the people who wrote the bible even described him properly. If the "believe or burn" philosophy is correct they should be freaking out because they have nothing to go on, no one does.

 If you have to believe in Jesus, there is simply no way to do it properly. You are most likely believing in some fictional idealized version of some guy you can't even picture correctly. If there is a tyrant god like Yahweh, and belief in his son is needed to avoid his wrath, everyone is fucked, even Christians. 




 I found this comment by him/her very enlightening and want to share it. More ammunition to shoot people reasonable is good. If impatient, start in the middle. (Text-post, so I'm not karma-whoring.)

http://www.reddit.com/r/atheism/comments/h2l53/sometimes_i_forget_just_how_absurd_this_whole/c1s3ver

 I just recently read it again from cover to cover. I took pretty extensive notes and painfully read each book.

 First of all it's really boring and hard to read. The stories are filled with disgusting examples of humanity at its worst and the god of the bible is blatantly evil.

 Some of the poetry is decent. I especially enjoyed Ecclesiastes and a few Proverbs but there is nothing in the bible that points towards a divine authorship. Nothing that even hints at omniscience. It is painfully obvious that it was written by, and for, ignorant men from an age of barbarism.

 The New testament is mainly a bunch of letters from Paul of Tarsus who never even met Jesus. Nothing in Matthew, Mark, Luke or John is very compelling at all.

 My biggest complaint is the "believe or burn" philosophy of the bible, which completely fucks everyone because the bible is insufficient for belief or knowledge of who Jesus even was.

 Nothing in the Gospels really expresses or describes Jesus well enough where "belief in Jesus" would have any real meaning. For all the Christians know their mental image of Jesus (Yeshua) is so fucking far off base that if he is real their version doesn't even count and they still burn.

 "You've been picturing some white guy with a different name and his teachings weren't even translated correctly... fuck you, burn in hell." Yahweh (and this is completely within his character, he is insanely evil.)

 You can't just say some guys name (which isn't even his real name) picture some face (that isn't even his real face) and then read some of his words (that probably aren't even his words) and then expect some kind of reward. Especially when the god is Yahweh. (seriously, most evil creature ever created by man.)

 Christians have no fucking clue who Jesus was, what he looked like, what he was talking about or if the people who wrote the bible even described him properly. If the "believe or burn" philosophy is correct they should be freaking out because they have nothing to go on, no one does.

 If you have to believe in Jesus, there is simply no way to do it properly. You are most likely believing in some fictional idealized version of some guy you can't even picture correctly. If there is a tyrant god like Yahweh, and belief in his son is needed to avoid his wrath, everyone is fucked, even Christians. 














 This posting serves to bring said concept to your attention, and to allow its discussion.

Assuming that mankind will keep progressing, maybe even populate other planets, so we'd have a much larger population:

I believe we can assume that eventually, high quality digital content of all kinds for very low prices or even for free will be available to people of all tastes, and even in such an amount that nobody will ever run out. (This will not prevent content creation, as creating is an entirely different game/experience than consuming.)

If we crank this up to eleven, this might even result in cheap/free Hollywood-class (I mean the craftsmanship.) movies. 




 How do we "know" (Everything is best guess.) that these events that we call "random" are not e.g. a deterministic result of the total sum of all events in the universe, like water flowing down a drain? Are we not just drops looking at our neighbor-drop, unable to infer why it is behaving like that?

Or is the choice of the term "random" here just Occam's-Razor- and practicality-informed? 




 I always tried to understand what's going on there, and came to this view that at least ties it together for my head. But is it correct?

"Just think of high voltage sparking between two electrodes: The electricity jumps even without a (good) conductor. Kinda the same happens inside of a wire when the voltage is high - hence the resistance is less relevant."

And in the unlikely case that this is correct - why have I, 39 years of age, *never* read it anywhere? 




 I'll let myself out now.

PS: No karma for me, since it's a text-post.

PPS: Just in case you don't know, there's a very popular saying that says just the same about Satan. 









 I owned and played AoS at least a month prior. Getting the Europe server list was never remarkably slow.

But since that Sunday, it takes about 30 seconds (after 20 seconds, the list begins to fill, even with FULL and EMPTY servers displayed). Might have been 1 or 2 weeks earlier already, but definitely was Sunday, and definitely has been like this EVERY TIME / DAY since then. The US East / West lists are fast.

I didn't find anything on the Interwebs about this, which I find baffling.

Germany, ISP is Deutsche Telekom

I'm an AoS "noob", meaning I only know the Steam AoS, no custom servers, no randomly generated maps - just the standard stuff the average gamer gets. I have the Valentines DLC, but that was unrelated to the Europe list slow issue, timing-wise.

**EDIT:**

**MON 2013-02-25 It's still this way. I found a workaround: Add every server to your favorites, then use the favorite-page henceforth. You find new servers to fave several times per day, which I find weird, anyway: This is a viable way to play it and IMMEDIATELY get your server info.** 












































 This is my stance.

We use about 1.5 Earths today, resource-wise ([link](http://www.footprintnetwork.org/en/index.php/gfn/page/world_footprint/), [link](http://phys.org/news178269435.html)). We need much more than the planet can provide. http://www.google.com/search?q=resource+use+earths

We are heading towards an abyss, and we are not slowing down, let alone turning around.

The only *effective* solution would be to decrease population growth.

Of course we must keep having children, but even if we would step on the brake with effort right now, Earth's population would certainly not decrease drastically in 100 years, it would probably even still increase.

This must become a topic people care about in everyday life, because we, mankind, are *insane* as a collective. We must face the truth of our global situation and act accordingly on a local scale. 


































 (I searched for "formatting" in this subreddit but didn't see a fitting submission, so forgive me if this is effectively spam.)

So, again: The "formatting help" link under comments that shows a few things about how to format text could use something else: A link to a page that explains *all* of the formatting options.

Or is this omitted intentionally to prevent people from going crazy like they're just making their first Microsoft Word document? 









